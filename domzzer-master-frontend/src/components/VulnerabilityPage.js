import React, { useEffect } from 'react'
import { useParams } from "react-router-dom"
import { useSelector, useDispatch } from 'react-redux'
import vulnerabilityService from '../services/VulnerabilityService'
import { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'

const VulnerabilityPage = () => {
  const dispatch = useDispatch()
  const id = useParams().id
  const vulnerabilities = useSelector(state => state.vulnerabilities)
  const vulnerability = vulnerabilities.find(v => v.id === id)

  useEffect(() => {
    vulnerabilityService.getById(id)
      .then(vulnerability => {
        dispatch(vulnerabilityInsert(vulnerability))
      })
      .catch(error => {
      })
  }, []) // eslint-disable-line react-hooks/exhaustive-deps

  if (vulnerability === undefined) {
    return (
      <div>
        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>
      </div>
    )
  }

  return (
    <div>
      <h1>domzzer / Vulnerabilities / {vulnerability.id} </h1>
      <h3>server address: {vulnerability.serverAddress}</h3>
      <h3>target browser: {vulnerability.targetBrowser}</h3>
      <h3>timestamp: {vulnerability.timestamp}</h3>
      <h3>status: {vulnerability.status}</h3>
    </div>
  )
}

export default VulnerabilityPage