namespace SlaveAPI.Data
{
    using System.Collections.Generic;
    using SlaveAPI.Models;

    public class MockVulnerabilityRepository : IVulnerabilityRepository
    {
        private List<Vulnerability> vulnerabilities;

        public MockVulnerabilityRepository()
        {
            this.vulnerabilities = new List<Vulnerability>();
        }

        public void CreateVulnerability(Vulnerability vulnerability)
        {
            int max = 0;
            foreach (var v in this.vulnerabilities)
            {
                if (v.Id > max)
                {
                    max = v.Id;
                }
            }

            vulnerability.Id = max + 1;

            this.vulnerabilities.Add(vulnerability);
        }

        public Vulnerability DeleteVulnerabilityById(int id)
        {
            var v = this.vulnerabilities.Find(x => x.Id == id);

            if (v == null)
            {
                return null;
            }

            this.vulnerabilities.Remove(v);
            return v;
        }

        public IEnumerable<Vulnerability> GetAllVulnerabilities()
        {
            return this.vulnerabilities;
        }

        public Vulnerability GetVulnerabilityById(int id)
        {
            return this.vulnerabilities.Find(x => x.Id == id);
        }

        public bool SaveChanges()
        {
            return true;
        }
    }
}