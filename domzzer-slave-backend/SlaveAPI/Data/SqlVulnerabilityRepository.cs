namespace SlaveAPI.Data
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using SlaveAPI.Models;

    public class SqlVulnerabilityRepository : IVulnerabilityRepository
    {
        private SlaveAPIContext context;

        public SqlVulnerabilityRepository(SlaveAPIContext context)
        {
            this.context = context;
        }

        public void CreateVulnerability(Vulnerability vulnerability)
        {
            if (vulnerability == null)
            {
                throw new ArgumentNullException(nameof(vulnerability));
            }

            context.Add(vulnerability);
        }

        public Vulnerability DeleteVulnerabilityById(int id)
        {
            Vulnerability vulnerability = context.Vulnerabilities.FirstOrDefault(x => x.Id == id);

            if (vulnerability != null)
            {
                context.Vulnerabilities.Remove(vulnerability);
            }

            return vulnerability;
        }

        public IEnumerable<Vulnerability> GetAllVulnerabilities()
        {
            return context.Vulnerabilities.ToList();
        }

        public Vulnerability GetVulnerabilityById(int id)
        {
            return context.Vulnerabilities.FirstOrDefault(x => x.Id == id);
        }

        public bool SaveChanges()
        {
            return (context.SaveChanges() >= 0);
        }
    }
}