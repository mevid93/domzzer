namespace SlaveAPI.Data
{
    using System.Collections.Generic;
    using SlaveAPI.Models;

    public class MockVulnerabilityRepository : IVulnerabilityRepository
    {
        public void CreateVulnerability(Vulnerability vulnerability)
        {
            throw new System.NotImplementedException();
        }

        public Vulnerability DeleteVulnerabilityById(int id)
        {
            Vulnerability vulnerability = new Vulnerability();
            vulnerability.Id = 1;
            vulnerability.TargetBrowser = "Chrome";
            vulnerability.Timestamp = System.DateTime.MinValue;
            vulnerability.Payload = "<html></html>";
            return vulnerability;
        }

        public IEnumerable<Vulnerability> GetAllVulnerabilities()
        {
            List<Vulnerability> vulnerabilities = new List<Vulnerability>();
            vulnerabilities.Add(new Vulnerability(1, "Safari", System.DateTime.MinValue, "<html>1</html>"));
            vulnerabilities.Add(new Vulnerability(2, "Chrome", System.DateTime.MaxValue, "<html>2</html>"));
            return vulnerabilities;
        }

        public Vulnerability GetVulnerabilityById(int id)
        {
            throw new System.NotImplementedException();
        }

        public bool SaveChanges()
        {
            throw new System.NotImplementedException();
        }
    }
}