{"version":3,"sources":["components/InfoNotification.js","components/ErrorNotification.js","reducers/ServerInfoReducer.js","services/ServerInfoService.js","reducers/ErrorMsgReducer.js","components/Home.js","services/SlaveService.js","reducers/InfoMsgReducer.js","components/NewSlaveForm.js","reducers/SlaveReducer.js","components/Slaves.js","components/Slave.js","reducers/VulnerabilityReducer.js","services/VulnerabilityService.js","components/Vulnerabilities.js","components/Vulnerability.js","App.js","index.js"],"names":["InfoNotification","infoMsg","useSelector","state","undefined","Alert","variant","severity","ErrorNotification","errorMsg","serverInfoReducer","action","type","info","service","getInfo","axios","get","then","response","data","errorMsgChange","errorMsgReducer","ServerInfo","serverInfo","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","Home","dispatch","useDispatch","useEffect","serverInfoService","serverInfoChange","catch","e","setTimeout","baseUrl","getAll","getById","id","create","newSlave","post","remove","delete","infoMsgChange","infoMsgReducer","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","padding","margin","NewSlaveForm","classes","useState","name","setName","address","setAddress","Container","component","maxWidth","className","Typography","gutterBottom","onSubmit","event","preventDefault","slaveService","result","error","TextField","label","required","fullWidth","onChange","target","value","Button","color","slavesChange","slaves","slaveReducer","find","s","slave","concat","SlaveTable","style","TableHead","map","to","status","Slaves","filter","setFilter","filteredSlaves","toLowerCase","includes","Grid","container","justify","item","xs","justifyContent","placeholder","Link","Slave","history","useHistory","useParams","slaveInsert","onClick","push","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","serverAddress","targetBrowser","timestamp","Vulnerabilities","vulnerabilityService","vulnerabilitiesChange","Vulnerability","vulnerabilityInsert","root","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarSpacer","mixins","toolbar","content","flexGrow","height","overflow","paddingTop","paddingBottom","App","CssBaseline","AppBar","position","Toolbar","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74fce8ec.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab/'\n\nconst InfoNotification = () => {\n  const infoMsg = useSelector(state => state.infoMsg)\n\n  if (infoMsg === null || infoMsg === undefined) {\n    return null\n  }\n\n  return (\n    <div>\n      <Alert variant=\"filled\" severity=\"success\">{infoMsg}</Alert>\n    </div>\n  )\n}\n\nexport default InfoNotification","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab/'\n\nconst ErrorNotification = () => {\n  const errorMsg = useSelector(state => state.errorMsg)\n\n  if (errorMsg === null || errorMsg === undefined) {\n    return null\n  }\n\n  return (\n    <div>\n      <Alert variant=\"filled\" severity=\"error\">{errorMsg}</Alert>\n    </div>\n  )\n}\n\nexport default ErrorNotification","const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nconst getInfo = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo }\nexport default service","const errorMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      if (action.errorMsg === undefined){\n        return null\n      }\n      return action.errorMsg\n    default:\n      return state\n  }\n}\n\nexport const errorMsgChange = errorMsg => {\n  return {\n    type: 'SET_ERROR_MESSAGE',\n    errorMsg\n  }\n}\n\nexport default errorMsgReducer","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core/'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\n\nconst ServerInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch(e => {\n        dispatch(errorMsgChange(\"Could not retrieve server information!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default Home","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst create = (newSlave) => {\n  const request = axios.post(baseUrl, newSlave)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById , create, remove}\nexport default service","const infoMsgReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_INFO_MESSAGE':\n        if (action.infoMsg === undefined){\n          return null\n        }\n        return action.infoMsg\n      default:\n        return state\n    }\n  }\n  \n  export const infoMsgChange = infoMsg => {\n    return {\n      type: 'SET_INFO_MESSAGE',\n      infoMsg\n    }\n  }\n  \n  export default infoMsgReducer","import React, { useState } from 'react'\nimport slaveService from '../services/SlaveService'\nimport { useDispatch } from 'react-redux'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport { infoMsgChange } from '../reducers/InfoMsgReducer'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\n\nconst NewSlaveForm = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n\n  const addSlave = (event) => {\n    event.preventDefault()\n    const newSlave = {\n      name: name,\n      address: address\n    }\n    slaveService.create(newSlave)\n      .then(result => {\n        dispatch(infoMsgChange(\"Succesfully added new slave to database!\"))\n        setTimeout(() => {\n          dispatch(infoMsgChange(null))\n        }, 5000)\n        setName('')\n        setAddress('')\n      })\n      .catch(error => {\n        dispatch(errorMsgChange(\"Could not add new slave to database!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }\n\n  const handleSlaveNameChange = (event) => {\n    setName(event.target.value)\n  }\n\n  const handleSlaveAddressChange = (event) => {\n    setAddress(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New Slave</Typography>\n\n          <form onSubmit={addSlave} className={classes.form}>\n\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={handleSlaveNameChange}\n              value={name}\n            />\n\n            <TextField\n              label=\"Address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={handleSlaveAddressChange}\n              value={address}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Add\n            </Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewSlaveForm","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const slavesChange = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { slavesChange } from '../reducers/SlaveReducer'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport slaveService from '../services/SlaveService'\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, Button } from '@material-ui/core/'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst SlaveTable = ({ slaves }) => {\n  return (\n    <TableContainer style={{marginTop: 30}}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Server name</TableCell>\n            <TableCell>Server addess</TableCell>\n            <TableCell>Server status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {slaves.map(s =>\n            <TableRow key={s.id}>\n              <TableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></TableCell>\n              <TableCell align=\"left\">{s.address}</TableCell>\n              <TableCell align=\"left\">{s.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Slaves = () => {\n  const [filter, setFilter] = useState('')\n  const dispatch = useDispatch()\n  const slaves = useSelector(state => state.slaves)\n  const filteredSlaves = slaves.filter(s => {\n    if (s.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.address.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.status.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(slaves => dispatch(slavesChange(slaves)))\n      .catch(e => {\n        dispatch(errorMsgChange(\"Could not retrieve slave information from server!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves</h1>\n      <Grid container spacing={3} justify=\"space-around\">\n        <Grid item xs={6} style={{display:\"flex\", justifyContent: \"flex-start\"}}>\n          <TextField onChange={handleFilterChange} fullWidth value={filter} placeholder=\"filter by keyword\"/>\n        </Grid>\n        <Grid item xs={6} style={{display:\"flex\", justifyContent: \"center\"}}>\n          <Button color=\"primary\" variant=\"contained\" component={Link} to=\"/slaves/new\">add new slave</Button>\n        </Grid>\n      </Grid>\n      <SlaveTable slaves={filteredSlaves} />\n    </div>\n  )\n}\n\nexport default Slaves","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport slaveService from '../services/SlaveService'\nimport { slaveInsert, slavesChange } from '../reducers/SlaveReducer'\n\nconst Slave = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    slaveService.remove(id)\n      .then(() => {\n        const filteredSlaves = slaves.filter(s => s.id !== id)\n        dispatch(slavesChange(filteredSlaves))\n        history.push('/slaves')\n      })\n      .catch(error => {\n      })\n  }\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Slaves - 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / {slave.name} </h1>\n      <h3>address: {slave.address}</h3>\n      <h3>status: {slave.status}</h3>\n      <button onClick={deleteSlave}>Remove slave from database</button>\n    </div>\n  )\n}\n\nexport default Slave","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const vulnerabilitiesChange = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById }\nexport default service","import React, { useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { vulnerabilitiesChange } from '../reducers/VulnerabilityReducer'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Server address</TableCell>\n            <TableCell>Target browser</TableCell>\n            <TableCell>Timestamp</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities.map(v =>\n            <TableRow key={v.id}>\n              <TableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></TableCell>\n              <TableCell align=\"left\">{v.serverAddress}</TableCell>\n              <TableCell align=\"left\">{v.targetBrowser}</TableCell>\n              <TableCell align=\"left\">{v.timestamp}</TableCell>\n              <TableCell align=\"left\">{v.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Vulnerabilities = () => {\n  const dispatch = useDispatch()\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(vulnerabilitiesChange(vulnerabilities)))\n      .catch(e => {\n        dispatch(errorMsgChange(\"Could not retrieve vulnerability information from server!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities</h1>\n      <h3>Vulnerabilities in Database</h3>\n      <VulnerabilityTable vulnerabilities={vulnerabilities} />\n    </div>\n  )\n}\n\nexport default Vulnerabilities","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'\n\nconst Vulnerability = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities / {vulnerability.id} </h1>\n      <h3>server address: {vulnerability.serverAddress}</h3>\n      <h3>target browser: {vulnerability.targetBrowser}</h3>\n      <h3>timestamp: {vulnerability.timestamp}</h3>\n      <h3>status: {vulnerability.status}</h3>\n    </div>\n  )\n}\n\nexport default Vulnerability","import {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\nimport { AppBar, Container, Toolbar, Button } from '@material-ui/core/'\nimport { makeStyles } from '@material-ui/core/styles'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport InfoNotification from './components/InfoNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport Home from './components/Home'\nimport NewSlaveForm from './components/NewSlaveForm'\nimport Slaves from './components/Slaves'\nimport Slave from './components/Slave'\nimport Vulnerabilities from './components/Vulnerabilities'\nimport Vulnerability from './components/Vulnerability'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n            <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n            <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n            <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>\n          </Toolbar>\n        </AppBar>\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <InfoNotification />\n            <ErrorNotification />\n\n            <Switch>\n              <Route path=\"/settings\">\n\n              </Route>\n              <Route path=\"/vulnerabilities/:id\">\n                <Vulnerability />\n              </Route>\n              <Route path=\"/vulnerabilities\">\n                <Vulnerabilities />\n              </Route>\n              <Route path=\"/slaves/new\">\n                <NewSlaveForm />\n              </Route>\n              <Route path=\"/slaves/:id\">\n                <Slave />\n              </Route>\n              <Route path=\"/slaves\">\n                <Slaves />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Container>\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\nimport infoMsgReducer from './reducers/InfoMsgReducer'\nimport errorMsgReducer from './reducers/ErrorMsgReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n  infoMsg: infoMsgReducer,\n  errorMsg: errorMsgReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}