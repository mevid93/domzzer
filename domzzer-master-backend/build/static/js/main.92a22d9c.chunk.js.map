{"version":3,"sources":["components/InfoNotification.js","components/ErrorNotification.js","reducers/ServerInfoReducer.js","services/ServerInfoService.js","reducers/ErrorMsgReducer.js","components/Home.js","reducers/SlaveReducer.js","services/SlaveService.js","components/Slaves.js","components/Slave.js","reducers/VulnerabilityReducer.js","services/VulnerabilityService.js","components/Vulnerabilities.js","components/Vulnerability.js","App.js","reducers/InfoMsgReducer.js","index.js"],"names":["InfoNotification","infoMsg","useSelector","state","undefined","Alert","variant","severity","ErrorNotification","errorMsg","serverInfoReducer","action","type","info","service","getInfo","axios","get","then","response","data","errorMsgChange","errorMsgReducer","ServerInfo","serverInfo","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","Home","dispatch","useDispatch","useEffect","serverInfoService","serverInfoChange","catch","e","setTimeout","slaveReducer","slaves","find","s","id","slave","concat","baseUrl","getAll","getById","SlaveTable","TableHead","map","to","name","address","status","Slaves","slaveService","slavesChange","Slave","useParams","slaveInsert","error","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","serverAddress","targetBrowser","timestamp","Vulnerabilities","vulnerabilityService","vulnerabilitiesChange","Vulnerability","vulnerabilityInsert","App","Container","AppBar","position","Toolbar","Button","color","component","Link","path","infoMsgReducer","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.92a22d9c.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab/'\n\nconst InfoNotification = () => {\n  const infoMsg = useSelector(state => state.infoMsg)\n\n  if (infoMsg === null || infoMsg === undefined) {\n    return null\n  }\n\n  return (\n    <div>\n      <Alert variant=\"filled\" severity=\"success\">{infoMsg}</Alert>\n    </div>\n  )\n}\n\nexport default InfoNotification","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab/'\n\nconst ErrorNotification = () => {\n  const errorMsg = useSelector(state => state.errorMsg)\n\n  if (errorMsg === null || errorMsg === undefined) {\n    return null\n  }\n\n  return (\n    <div>\n      <Alert variant=\"filled\" severity=\"error\">{errorMsg}</Alert>\n    </div>\n  )\n}\n\nexport default ErrorNotification","const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nconst getInfo = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo }\nexport default service","const errorMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      if (action.errorMsg === undefined){\n        return null\n      }\n      return action.errorMsg\n    default:\n      return state\n  }\n}\n\nexport const errorMsgChange = errorMsg => {\n  return {\n    type: 'SET_ERROR_MESSAGE',\n    errorMsg\n  }\n}\n\nexport default errorMsgReducer","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core/'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\n\nconst ServerInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch(e => {\n        dispatch(errorMsgChange(\"Could not retrieve server information!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default Home","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const slavesChange = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById }\nexport default service","import React, { useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { slavesChange } from '../reducers/SlaveReducer'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport slaveService from '../services/SlaveService'\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst SlaveTable = ({ slaves }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Server name</TableCell>\n            <TableCell>Server addess</TableCell>\n            <TableCell>Server status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {slaves.map(s =>\n            <TableRow key={s.id}>\n              <TableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></TableCell>\n              <TableCell align=\"left\">{s.address}</TableCell>\n              <TableCell align=\"left\">{s.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Slaves = () => {\n  const dispatch = useDispatch()\n  const slaves = useSelector(state => state.slaves)\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(slaves => dispatch(slavesChange(slaves)))\n      .catch(e => {\n        dispatch(errorMsgChange(\"Could not retrieve slave information from server!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Slaves</h1>\n      <h3>Slaves in Database</h3>\n      <SlaveTable slaves={slaves} />\n    </div>\n  )\n}\n\nexport default Slaves","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport slaveService from '../services/SlaveService'\nimport { slaveInsert } from '../reducers/SlaveReducer'\n\nconst Slave = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Slaves - 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer - Slaves - {slave.name} </h1>\n      <h3>address: {slave.address}</h3>\n      <h3>status: {slave.status}</h3>\n    </div>\n  )\n}\n\nexport default Slave","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const vulnerabilitiesChange = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById }\nexport default service","import React, { useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { vulnerabilitiesChange } from '../reducers/VulnerabilityReducer'\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Server address</TableCell>\n            <TableCell>Target browser</TableCell>\n            <TableCell>Timestamp</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities.map(v =>\n            <TableRow key={v.id}>\n              <TableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></TableCell>\n              <TableCell align=\"left\">{v.serverAddress}</TableCell>\n              <TableCell align=\"left\">{v.targetBrowser}</TableCell>\n              <TableCell align=\"left\">{v.timestamp}</TableCell>\n              <TableCell align=\"left\">{v.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Vulnerabilities = () => {\n  const dispatch = useDispatch()\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(vulnerabilitiesChange(vulnerabilities)))\n      .catch(e => {\n        dispatch(errorMsgChange(\"Could not retrieve vulnerability information from server!\"))\n        setTimeout(() => {\n          dispatch(errorMsgChange(null))\n        }, 5000)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Vulnerabilities</h1>\n      <h3>Vulnerabilities in Database</h3>\n      <VulnerabilityTable vulnerabilities={vulnerabilities} />\n    </div>\n  )\n}\n\nexport default Vulnerabilities","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'\n\nconst Vulnerability = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer - Vulnerabilities - {vulnerability.id} </h1>\n      <h3>server address: {vulnerability.serverAddress}</h3>\n      <h3>target browser: {vulnerability.targetBrowser}</h3>\n      <h3>timestamp: {vulnerability.timestamp}</h3>\n      <h3>status: {vulnerability.timestamp}</h3>\n    </div>\n  )\n}\n\nexport default Vulnerability","import {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\nimport { AppBar, Container, Toolbar, Button } from '@material-ui/core/'\nimport InfoNotification from './components/InfoNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport Home from './components/Home'\nimport Slaves from './components/Slaves'\nimport Slave from './components/Slave'\nimport Vulnerabilities from './components/Vulnerabilities'\nimport Vulnerability from './components/Vulnerability'\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n            <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n            <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n            <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>\n          </Toolbar>\n        </AppBar>\n\n        <InfoNotification />\n        <ErrorNotification />\n\n        <Switch>\n          <Route path=\"/settings\">\n\n          </Route>\n          <Route path=\"/vulnerabilities/:id\">\n            <Vulnerability />\n          </Route>\n          <Route path=\"/vulnerabilities\">\n            <Vulnerabilities />\n          </Route>\n          <Route path=\"/slaves/:id\">\n            <Slave />\n          </Route>\n          <Route path=\"/slaves\">\n            <Slaves />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","const infoMsgReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_INFO_MESSAGE':\n        if (action.infoMsg === undefined){\n          return null\n        }\n        return action.infoMsg\n      default:\n        return state\n    }\n  }\n  \n  export const infoMsgChange = infoMsg => {\n    return {\n      type: 'SET_INFO_MESSAGE',\n      infoMsg\n    }\n  }\n  \n  export default infoMsgReducer","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\nimport infoMsgReducer from './reducers/InfoMsgReducer'\nimport errorMsgReducer from './reducers/ErrorMsgReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n  infoMsg: infoMsgReducer,\n  errorMsg: errorMsgReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}