{"version":3,"sources":["components/InfoNotification.js","components/ErrorNotification.js","reducers/ErrorMsgReducer.js","reducers/InfoMsgReducer.js","hooks/Messager.js","reducers/ServerInfoReducer.js","services/ServerInfoService.js","components/Home.js","services/SlaveService.js","components/NewSlaveForm.js","reducers/SlaveReducer.js","components/SlaveTable.js","components/Slaves.js","components/Slave.js","reducers/VulnerabilityReducer.js","services/VulnerabilityService.js","components/VulnerabilityTable.js","components/Vulnerabilities.js","components/Vulnerability.js","App.js","index.js"],"names":["InfoNotification","infoMsg","useSelector","state","undefined","Alert","variant","severity","ErrorNotification","errorMsg","errorMsgChange","type","errorMsgReducer","action","infoMsgChange","infoMsgReducer","useMessager","dispatch","useDispatch","showErrorMessage","message","setTimeout","showInfoMessage","serverInfoReducer","info","service","getInfo","axios","get","then","response","data","ServerInfo","serverInfo","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","Home","messager","useEffect","serverInfoService","serverInfoChange","catch","baseUrl","getAll","getById","id","create","newSlave","post","remove","delete","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","padding","margin","NewSlaveForm","classes","useState","name","setName","address","setAddress","username","setUsername","password","setPassword","Container","component","maxWidth","className","Typography","gutterBottom","onSubmit","event","preventDefault","slaveService","TextField","label","required","fullWidth","onChange","target","value","Button","color","slavesChange","slaves","slaveReducer","find","s","slave","concat","SlaveTable","style","TableHead","map","to","status","Slaves","filter","setFilter","filteredSlaves","toLowerCase","includes","Grid","container","justify","item","xs","justifyContent","placeholder","Link","root","flexGrow","gridItem","SlaveForm","disabled","Slave","history","useHistory","useParams","slaveInsert","error","direction","size","onClick","push","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","serverAddress","targetBrowser","timestamp","Vulnerabilities","vulnerabilityService","vulnerabilitiesChange","Vulnerability","vulnerabilityInsert","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarSpacer","mixins","toolbar","content","height","overflow","paddingTop","paddingBottom","App","CssBaseline","AppBar","position","Toolbar","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f131f249.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst InfoNotification = () => {\n  const infoMsg = useSelector(state => state.infoMsg)\n\n  return (\n    <div>\n      {(infoMsg !== null && infoMsg !== undefined) && <Alert variant=\"filled\" severity=\"success\">{infoMsg}</Alert>}\n    </div >\n  )\n}\n\nexport default InfoNotification","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst ErrorNotification = () => {\n  const errorMsg = useSelector(state => state.errorMsg)\n\n  return (\n    <div>\n      {(errorMsg !== null && errorMsg !== undefined) && <Alert variant=\"filled\" severity=\"error\">{errorMsg}</Alert>}\n    </div>\n  )\n}\n\nexport default ErrorNotification","const errorMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      if (action.errorMsg === undefined){\n        return null\n      }\n      return action.errorMsg\n    default:\n      return state\n  }\n}\n\nexport const errorMsgChange = errorMsg => {\n  return {\n    type: 'SET_ERROR_MESSAGE',\n    errorMsg\n  }\n}\n\nexport default errorMsgReducer","const infoMsgReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_INFO_MESSAGE':\n        if (action.infoMsg === undefined){\n          return null\n        }\n        return action.infoMsg\n      default:\n        return state\n    }\n  }\n  \n  export const infoMsgChange = infoMsg => {\n    return {\n      type: 'SET_INFO_MESSAGE',\n      infoMsg\n    }\n  }\n  \n  export default infoMsgReducer","import { useDispatch } from 'react-redux'\n\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport { infoMsgChange } from '../reducers/InfoMsgReducer'\n\nconst MSG_DISPLAY_TIME = 5000\n\nconst useMessager = () => {\n  const dispatch = useDispatch()\n\n  const showInfoMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(infoMsgChange(message))\n    setTimeout(() => {\n      dispatch(infoMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  const showErrorMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(errorMsgChange(message))\n    setTimeout(() => {\n      dispatch(errorMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  return {\n    showErrorMessage,\n    showInfoMessage,\n  }\n}\n\nexport { useMessager }","const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nconst getInfo = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo, }\nexport default service","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst ServerInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Home = () => {\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch(() => {\n        messager.showErrorMessage(\"Could not retrieve server information!\")\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default Home","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst create = (newSlave) => {\n  const request = axios.post(baseUrl, newSlave)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, }\nexport default service","import React, { useState } from 'react'\n\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst NewSlaveForm = () => {\n  const messager = useMessager()\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const addSlave = (event) => {\n    event.preventDefault()\n\n    const newSlave = { name, address, username, password }\n\n    slaveService.create(newSlave)\n      .then(() => {\n        messager.showInfoMessage(\"Succesfully added new slave to database!\")\n        setName('')\n        setAddress('')\n        setUsername('')\n        setPassword('')\n      })\n      .catch(() => {\n        messager.showErrorMessage(\"Could not add new slave to database!!!\")\n      })\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New Slave</Typography>\n\n          <form onSubmit={addSlave} className={classes.form}>\n\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setName(event.target.value)}\n              value={name}\n            />\n\n            <TextField\n              label=\"Address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setAddress(event.target.value)}\n              value={address}\n            />\n\n            <TextField\n              label=\"Username (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              onChange={(event) => setUsername(event.target.value)}\n              value={username}\n            />\n\n            <TextField\n              label=\"Password (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Add</Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewSlaveForm","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const slavesChange = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst SlaveTable = ({ slaves }) => {\n  return (\n    <TableContainer style={{ marginTop: 30 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Server name</TableCell>\n            <TableCell>Server addess</TableCell>\n            <TableCell>Server status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {slaves.map(s =>\n            <TableRow key={s.id}>\n              <TableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></TableCell>\n              <TableCell align=\"left\">{s.address}</TableCell>\n              <TableCell align=\"left\">{s.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default SlaveTable","import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { slavesChange } from '../reducers/SlaveReducer'\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\nimport SlaveTable from './SlaveTable'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst Slaves = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const slaves = useSelector(state => state.slaves)\n\n  const filteredSlaves = slaves.filter(s => {\n    if (s.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.address.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.status.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(slaves => dispatch(slavesChange(slaves)))\n      .catch(() => {\n        messager.showErrorMessage(\"Could not retrieve slave information from server!\")\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Slaves</h1>\n\n      <Grid container spacing={3} justify=\"space-around\">\n\n        <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n        <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            component={Link}\n            to=\"/slaves/new\"\n          >add new slave</Button>\n        </Grid>\n      </Grid>\n\n      <SlaveTable slaves={filteredSlaves} />\n    </div>\n  )\n}\n\nexport default Slaves","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport slaveService from '../services/SlaveService'\nimport { slaveInsert, slavesChange } from '../reducers/SlaveReducer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst SlaveForm = ({ slave, classes }) => {\n  return (\n    <div>\n      <form className={classes.form}>\n\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={slave.name}\n          disabled\n        />\n\n        <TextField\n          label=\"Address\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={slave.address}\n          disabled\n        />\n\n        <TextField\n          label=\"Username (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          value={slave.username}\n          disabled\n        />\n\n        <TextField\n          label=\"Password (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          type=\"password\"\n          value={slave.password}\n          disabled\n        />\n\n      </form>\n    </div>\n  )\n}\n\nconst Slave = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    slaveService.remove(id)\n      .then(() => {\n        const filteredSlaves = slaves.filter(s => s.id !== id)\n        dispatch(slavesChange(filteredSlaves))\n        history.push('/slaves')\n      })\n      .catch(error => {\n      })\n  }\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Slaves / 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / {slave.name} </h1>\n      \n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <SlaveForm slave={slave} classes={classes} />\n        </div>\n      </Container>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n          <Button color=\"primary\" variant=\"contained\" size=\"large\">\n            Edit information\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button color=\"secondary\" variant=\"contained\" size=\"large\" onClick={deleteSlave} >\n            Remove from database\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Slave","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const vulnerabilitiesChange = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, }\nexport default service","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Server address</TableCell>\n            <TableCell>Target browser</TableCell>\n            <TableCell>Timestamp</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities.map(v =>\n            <TableRow key={v.id}>\n              <TableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></TableCell>\n              <TableCell align=\"left\">{v.serverAddress}</TableCell>\n              <TableCell align=\"left\">{v.targetBrowser}</TableCell>\n              <TableCell align=\"left\">{v.timestamp}</TableCell>\n              <TableCell align=\"left\">{v.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default VulnerabilityTable","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { vulnerabilitiesChange } from '../reducers/VulnerabilityReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport VulnerabilityTable from './VulnerabilityTable'\n\nconst Vulnerabilities = () => {\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(vulnerabilitiesChange(vulnerabilities)))\n      .catch(() => {\n        messager.showErrorMessage(\"Could not retrieve vulnerability information from server!\")\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities</h1>\n      <h3>Vulnerabilities in Database</h3>\n      <VulnerabilityTable vulnerabilities={vulnerabilities} />\n    </div>\n  )\n}\n\nexport default Vulnerabilities","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'\n\nconst Vulnerability = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities / {vulnerability.id} </h1>\n      <h3>server address: {vulnerability.serverAddress}</h3>\n      <h3>target browser: {vulnerability.targetBrowser}</h3>\n      <h3>timestamp: {vulnerability.timestamp}</h3>\n      <h3>status: {vulnerability.status}</h3>\n    </div>\n  )\n}\n\nexport default Vulnerability","import {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\n\nimport InfoNotification from './components/InfoNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport Home from './components/Home'\nimport NewSlaveForm from './components/NewSlaveForm'\nimport Slaves from './components/Slaves'\nimport Slave from './components/Slave'\nimport Vulnerabilities from './components/Vulnerabilities'\nimport Vulnerability from './components/Vulnerability'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Container from '@material-ui/core/Container'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <Router>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n            <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n            <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n            <Button color=\"inherit\" component={Link} to=\"/users\">users</Button>\n            <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>\n          </Toolbar>\n        </AppBar>\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <InfoNotification />\n            <ErrorNotification />\n\n            <Switch>\n              <Route path=\"/users\">\n\n              </Route>\n              <Route path=\"/settings\">\n\n              </Route>\n              <Route path=\"/vulnerabilities/:id\">\n                <Vulnerability />\n              </Route>\n              <Route path=\"/vulnerabilities\">\n                <Vulnerabilities />\n              </Route>\n              <Route path=\"/slaves/new\">\n                <NewSlaveForm />\n              </Route>\n              <Route path=\"/slaves/:id\">\n                <Slave />\n              </Route>\n              <Route path=\"/slaves\">\n                <Slaves />\n              </Route>\n              <Route path=\"/\">\n                <Home />\n              </Route>\n            </Switch>\n          </Container>\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\nimport infoMsgReducer from './reducers/InfoMsgReducer'\nimport errorMsgReducer from './reducers/ErrorMsgReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n  infoMsg: infoMsgReducer,\n  errorMsg: errorMsgReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}