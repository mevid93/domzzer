{"version":3,"sources":["reducers/ServerInfoReducer.js","services/ServerInfoService.js","components/Home.js","App.js","index.js"],"names":["serverInfoReducer","state","action","type","info","service","getInfo","axios","get","then","response","data","ServerInfo","serverInfo","undefined","serverName","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","numberOfTestsPerformed","numberOfPotentialVulnerabilities","Home","dispatch","useDispatch","useSelector","useEffect","serverInfoService","serverInfoChange","catch","e","console","log","App","padding","style","to","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"2MAgBeA,EAhBW,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAChD,OAAQA,EAAOC,MACb,IAAK,kBACH,OAAOD,EAAOE,KAChB,QACE,OAAOH,I,iBCIEI,EADC,CAAEC,QALF,WAEd,OADgBC,IAAMC,IAHR,SAICC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,OCArCC,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACpB,YAAmBC,IAAfD,QAAsDC,IAA1BD,EAAWE,WAEvC,8BACE,oEAKJ,gCACE,qDAAwBF,EAAWE,cACnC,mDAAsBF,EAAWG,cACjC,2DAA8BH,EAAWI,iBACzC,uDAA0BJ,EAAWK,eAArC,SACA,qDAAwBL,EAAWM,cACnC,uDAA0BN,EAAWO,gBACrC,2DAA8BP,EAAWQ,kBACzC,4DAA+BR,EAAWS,0BAC1C,4EAA+CT,EAAWU,wCAwBjDC,EAnBF,WACX,IAAMC,EAAWC,cACXb,EAAac,aAAY,SAAA1B,GAAK,OAAIA,EAAMY,cAS9C,OAPAe,qBAAU,WACRC,EACGvB,UACAG,MAAK,SAAAL,GAAI,OAAIqB,EF1BY,SAAArB,GAC9B,MAAO,CACLD,KAAM,kBACNC,QEuByB0B,CAAiB1B,OACvC2B,OAAM,SAAAC,GAAC,OAAIC,QAAQC,IAAI,4CACzB,IAGD,gCACE,gDACA,cAAC,EAAD,CAAYrB,WAAYA,QCDfsB,MAnCf,WAEE,IAAMC,EAAU,CACdA,QAAS,GAGX,OACE,8BACE,eAAC,IAAD,WACE,gCACE,cAAC,IAAD,CAAMC,MAAOD,EAASE,GAAG,IAAzB,kBACA,cAAC,IAAD,CAAMD,MAAOD,EAASE,GAAG,UAAzB,oBACA,cAAC,IAAD,CAAMD,MAAOD,EAASE,GAAG,mBAAzB,6BACA,cAAC,IAAD,CAAMD,MAAOD,EAASE,GAAG,YAAzB,yBAGF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,cAGZ,cAAC,IAAD,CAAOA,KAAK,qBAGZ,cAAC,IAAD,CAAOA,KAAK,YAGZ,cAAC,IAAD,CAAOA,KAAK,IAAZ,SACE,cAAC,EAAD,eC1BNC,EAAUC,YAAgB,CAC9B5B,WAAYb,IAER0C,EAAQC,YAAYH,GAE1BI,IAASC,OACP,cAAC,IAAD,CAAUH,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFI,SAASC,eAAe,W","file":"static/js/main.7eb1ba67.chunk.js","sourcesContent":["const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import axios from 'axios'\nconst baseUrl = '/info'\n\nconst getInfo = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo }\nexport default service","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\n\nconst ServerInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <p>Master-server name: {serverInfo.serverName}</p>\n      <p>Master-server OS: {serverInfo.serverType}</p>\n      <p>Master-server OS-version: {serverInfo.serverVersion}</p>\n      <p>Master-server memory: {serverInfo.serverMemoryMb} Mb</p>\n      <p>Master-server date: {serverInfo.serverDate}</p>\n      <p>Master-server uptime: {serverInfo.serverUptime}</p>\n      <p>Number of slave machines: {serverInfo.numberOfSlaves}</p>\n      <p>Number of tests performed: {serverInfo.numberOfTestsPerformed}</p>\n      <p>Number of potential vulnerabilities found: {serverInfo.numberOfPotentialVulnerabilities}</p>\n    </div>\n  )\n}\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch(e => console.log(\"Could not connect to master-server!\"))\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Home</h1>\n      <ServerInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default Home","import {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\nimport Home from './components/Home'\n\nfunction App() {\n\n  const padding = {\n    padding: 5\n  }\n\n  return (\n    <div>\n      <Router>\n        <div>\n          <Link style={padding} to=\"/\">home</Link>\n          <Link style={padding} to=\"/slaves\">slaves</Link>\n          <Link style={padding} to=\"/vulnerabilities\">vulnerabilities</Link>\n          <Link style={padding} to=\"/settings\">settings</Link>\n        </div>\n\n        <Switch>\n          <Route path=\"/settings\">\n\n          </Route>\n          <Route path=\"/vulnerabilities\">\n\n          </Route>\n          <Route path=\"/slaves\">\n\n          </Route>\n          <Route path=\"/\">\n            <Home/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}