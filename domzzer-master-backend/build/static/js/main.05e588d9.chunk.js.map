{"version":3,"sources":["reducers/ServerInfoReducer.js","services/ServerInfoService.js","components/Home.js","reducers/SlaveReducer.js","services/SlaveService.js","components/Slaves.js","components/Slave.js","reducers/VulnerabilityReducer.js","services/VulnerabilityService.js","components/Vulnerabilities.js","components/Vulnerability.js","App.js","index.js"],"names":["serverInfoReducer","state","action","type","info","service","getInfo","axios","get","then","response","data","ServerInfo","serverInfo","undefined","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","Home","dispatch","useDispatch","useSelector","useEffect","serverInfoService","serverInfoChange","catch","e","console","log","slaveReducer","slaves","find","s","id","slave","concat","baseUrl","getAll","getById","SlaveTable","TableHead","map","to","name","address","status","Slaves","slaveService","slavesChange","Slave","useParams","slaveInsert","error","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","serverAddress","targetBrowser","timestamp","Vulnerabilities","vulnerabilityService","vulnerabilitiesChange","Vulnerability","vulnerabilityInsert","App","Container","AppBar","position","Toolbar","Button","color","component","Link","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.05e588d9.chunk.js","sourcesContent":["const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nconst getInfo = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo }\nexport default service","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst ServerInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch(e => console.log(\"Could not connect to master-server!\"))\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default Home","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const slavesChange = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById }\nexport default service","import React, { useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { slavesChange } from '../reducers/SlaveReducer'\nimport slaveService from '../services/SlaveService'\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst SlaveTable = ({ slaves }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Server name</TableCell>\n            <TableCell>Server addess</TableCell>\n            <TableCell>Server status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {slaves.map(s =>\n            <TableRow key={s.id}>\n              <TableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></TableCell>\n              <TableCell align=\"left\">{s.address}</TableCell>\n              <TableCell align=\"left\">{s.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Slaves = () => {\n  const dispatch = useDispatch()\n  const slaves = useSelector(state => state.slaves)\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(slaves => dispatch(slavesChange(slaves)))\n      .catch(e => console.log(\"Could not connect to master-server!\"))\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Slaves</h1>\n      <h3>Slaves in Database</h3>\n      <SlaveTable slaves={slaves} />\n    </div>\n  )\n}\n\nexport default Slaves","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport slaveService from '../services/SlaveService'\nimport { slaveInsert } from '../reducers/SlaveReducer'\n\nconst Slave = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Slaves - 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer - Slaves - {slave.name} </h1>\n      <h3>address: {slave.address}</h3>\n      <h3>status: {slave.status}</h3>\n    </div>\n  )\n}\n\nexport default Slave","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const vulnerabilitiesChange = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const request = axios.get(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById }\nexport default service","import React, { useEffect } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\nimport { vulnerabilitiesChange } from '../reducers/VulnerabilityReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Server address</TableCell>\n            <TableCell>Target browser</TableCell>\n            <TableCell>Timestamp</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities.map(v =>\n            <TableRow key={v.id}>\n              <TableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></TableCell>\n              <TableCell align=\"left\">{v.serverAddress}</TableCell>\n              <TableCell align=\"left\">{v.targetBrowser}</TableCell>\n              <TableCell align=\"left\">{v.timestamp}</TableCell>\n              <TableCell align=\"left\">{v.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Vulnerabilities = () => {\n  const dispatch = useDispatch()\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(vulnerabilitiesChange(vulnerabilities)))\n      .catch(e => {\n        console.log(e)\n        console.log(\"Could not connect to master-server!\")\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Vulnerabilities</h1>\n      <h3>Vulnerabilities in Database</h3>\n      <VulnerabilityTable vulnerabilities={vulnerabilities} />\n    </div>\n  )\n}\n\nexport default Vulnerabilities","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'\n\nconst Vulnerability = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer - Vulnerabilities - {vulnerability.id} </h1>\n      <h3>server address: {vulnerability.serverAddress}</h3>\n      <h3>target browser: {vulnerability.targetBrowser}</h3>\n      <h3>timestamp: {vulnerability.timestamp}</h3>\n      <h3>status: {vulnerability.status}</h3>\n    </div>\n  )\n}\n\nexport default Vulnerability","import {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\nimport { AppBar, Container, Toolbar, Button } from '@material-ui/core/'\nimport Home from './components/Home'\nimport Slaves from './components/Slaves'\nimport Slave from './components/Slave'\nimport Vulnerabilities from './components/Vulnerabilities'\nimport Vulnerability from './components/Vulnerability'\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n            <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n            <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n            <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/settings\">\n\n          </Route>\n          <Route path=\"/vulnerabilities/:id\">\n            <Vulnerability />\n          </Route>\n          <Route path=\"/vulnerabilities\">\n            <Vulnerabilities />\n          </Route>\n          <Route path=\"/slaves/:id\">\n            <Slave />\n          </Route>\n          <Route path=\"/slaves\">\n            <Slaves />\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}