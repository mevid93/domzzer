{"version":3,"sources":["components/InfoNotification.js","components/ErrorNotification.js","reducers/UserReducer.js","reducers/ErrorMsgReducer.js","reducers/InfoMsgReducer.js","hooks/Messager.js","services/ServerInfoService.js","services/SlaveService.js","services/UserService.js","services/VulnerabilityService.js","services/SettingsService.js","hooks/Tokenizer.js","services/LoginService.js","components/LoginPage.js","reducers/ServerInfoReducer.js","components/ServerInfo.js","components/VulnerabilityInfo.js","components/HomePage.js","components/NewSlavePage.js","reducers/SlaveReducer.js","components/StyledTableRow.js","components/StyledTableCell.js","components/SlaveTable.js","components/SlavesPage.js","components/EditSlaveForm.js","components/SlavePage.js","reducers/VulnerabilityReducer.js","components/VulnerabilityTable.js","components/VulnerabilitiesPage.js","components/EditVulnerabilityForm.js","components/VulnerabilityPage.js","components/NewUserPage.js","reducers/AllUsersReducer.js","components/UserTable.js","components/UsersPage.js","components/EditUserForm.js","components/UserPage.js","reducers/SettingsReducer.js","components/EditSettingsForm.js","components/SettingsPage.js","App.js","index.js"],"names":["InfoNotification","infoMsg","useSelector","state","undefined","Alert","variant","severity","ErrorNotification","errorMsg","setUser","user","type","userReducer","action","errorMsgChange","errorMsgReducer","infoMsgChange","infoMsgReducer","useMessager","dispatch","useDispatch","showErrorMessage","message","setTimeout","showInfoMessage","token","service","getInfo","config","headers","Authorization","axios","get","then","response","data","setToken","newToken","baseUrl","getAll","getById","id","create","newSlave","post","remove","delete","update","updatedData","put","newData","updatedSettings","sendStartCommand","sendStopCommand","useTokenizer","updateServicesWithToken","serverInfoService","slaveService","userService","vulnerabilityService","settingsService","clearServicesFromToken","login","username","password","a","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","padding","margin","LoginPage","history","useHistory","messager","tokenizer","classes","useState","setUsername","setPassword","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","push","error","Container","component","maxWidth","className","Typography","gutterBottom","onSubmit","TextField","label","required","fullWidth","onChange","target","value","Button","color","serverInfoReducer","info","ServerInfo","serverInfo","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","HomePage","useEffect","serverInfoChange","catch","exception","NewSlavePage","name","setName","address","setAddress","setSlaves","slaves","slaveReducer","find","s","slave","concat","StyledTableRow","withStyles","root","backgroundColor","palette","hover","StyledTableCell","head","common","black","white","body","fontSize","SlaveTable","page","setPage","rowsPerPage","emptyRows","Math","min","length","style","TableHead","slice","map","to","status","height","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","SlavesPage","filter","setFilter","filteredSlaves","toLowerCase","includes","resultSlaves","Grid","container","justify","item","xs","justifyContent","placeholder","userRole","Link","EditSlaveForm","loggeduser","editMode","setEditMode","updatedSlaveData","resultSlave","editedSlaves","disabled","direction","gridItem","onClick","size","flexGrow","SlavePage","useParams","slaveInsert","setVulnerabilities","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","targetBrowser","timestamp","VulnerabilitiesPage","filteredVulnerabilities","serverAddress","EditVulnerabilityForm","setStatus","updatedVulnerabilityData","FormControl","InputLabel","Select","labelId","MenuItem","VulnerabilityPage","loggedUser","vulnerabilityInsert","NewUserPage","setUserRole","newUser","setAllUsers","allUsers","allUsersReducer","u","UserTable","users","UsersPage","filteredUsers","EditUserForm","updatedUserData","updatedUser","UserPage","insertUser","setSettings","settings","settingsReducer","EditSettingsForm","pollInterval","setPollInterval","resultSettings","defaultValue","SettingsPage","serverSettings","isPolling","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarSpacer","mixins","toolbar","content","overflow","paddingTop","paddingBottom","rightToolbar","marginLeft","App","anchorEl","setAnchorEl","handleClose","loggedUserJSON","getItem","tokenuser","parse","removeItem","CssBaseline","AppBar","position","Toolbar","IconButton","aria-controls","aria-haspopup","currentTarget","Avatar","toUpperCase","Menu","keepMounted","open","Boolean","onClose","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8ddd5134.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst InfoNotification = () => {\n  const infoMsg = useSelector(state => state.infoMsg)\n\n  return (\n    <div>\n      {(infoMsg !== null && infoMsg !== undefined) && <Alert variant=\"filled\" severity=\"success\">{infoMsg}</Alert>}\n    </div >\n  )\n}\n\nexport default InfoNotification","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst ErrorNotification = () => {\n  const errorMsg = useSelector(state => state.errorMsg)\n\n  return (\n    <div>\n      {(errorMsg !== null && errorMsg !== undefined) && <Alert variant=\"filled\" severity=\"error\">{errorMsg}</Alert>}\n    </div>\n  )\n}\n\nexport default ErrorNotification","\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user\n    case 'RESET_USER':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setUser = user => {\n  return {\n    type: 'SET_USER',\n    user\n  }\n}\n\nexport const resetUser = () => {\n  return {\n    type: 'RESET_USER',\n  }\n}\n\nexport default userReducer","const errorMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      if (action.errorMsg === undefined){\n        return null\n      }\n      return action.errorMsg\n    default:\n      return state\n  }\n}\n\nexport const errorMsgChange = errorMsg => {\n  return {\n    type: 'SET_ERROR_MESSAGE',\n    errorMsg\n  }\n}\n\nexport default errorMsgReducer","const infoMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_INFO_MESSAGE':\n      if (action.infoMsg === undefined) {\n        return null\n      }\n      return action.infoMsg\n    default:\n      return state\n  }\n}\n\nexport const infoMsgChange = infoMsg => {\n  return {\n    type: 'SET_INFO_MESSAGE',\n    infoMsg\n  }\n}\n\nexport default infoMsgReducer","import { useDispatch } from 'react-redux'\n\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport { infoMsgChange } from '../reducers/InfoMsgReducer'\n\nconst MSG_DISPLAY_TIME = 5000\n\nconst useMessager = () => {\n  const dispatch = useDispatch()\n\n  const showInfoMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(infoMsgChange(message))\n    setTimeout(() => {\n      dispatch(infoMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  const showErrorMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(errorMsgChange(message))\n    setTimeout(() => {\n      dispatch(errorMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  return {\n    showErrorMessage,\n    showInfoMessage,\n  }\n}\n\nexport { useMessager }","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getInfo = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst create = (newSlave) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl, newSlave, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updatedData) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.put(`${baseUrl}/${id}`, updatedData, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, update, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst create = (user) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl, user, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newData) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.put(`${baseUrl}/${id}`, newData, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, update, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newData) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.put(`${baseUrl}/${id}`, newData, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, remove, update, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/settings'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst get = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst update = (updatedSettings) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.put(baseUrl, updatedSettings, config)\n  return request.then(response => response.data)\n}\n\n\nconst sendStartCommand = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(`${baseUrl}/start`, {}, config)\n  return request.then(response => response.data)\n}\n\nconst sendStopCommand = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(`${baseUrl}/stop`, {}, config)\n  return request.then(response => response.data)\n}\n\nconst service = { get, update, sendStartCommand, sendStopCommand, setToken }\nexport default service","import serverInfoService from '../services/ServerInfoService'\nimport slaveService from '../services/SlaveService'\nimport userService from '../services/UserService'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport settingsService from '../services/SettingsService'\n\nconst useTokenizer = () => {\n  \n  const updateServicesWithToken = (token) => {\n    serverInfoService.setToken(token)\n    slaveService.setToken(token)\n    userService.setToken(token)\n    vulnerabilityService.setToken(token)\n    settingsService.setToken(token)\n  }\n\n  const clearServicesFromToken = () => {\n    updateServicesWithToken(null)\n  }\n\n  return { updateServicesWithToken, clearServicesFromToken }\n}\n\nexport { useTokenizer }","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (username, password) => {\n  const response = await axios.post(baseUrl, { username, password })\n  return response.data\n}\n\nconst service = { login }\nexport default service","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\n\nimport { setUser } from '../reducers/UserReducer'\nimport { useMessager } from '../hooks/Messager'\nimport { useTokenizer } from '../hooks/Tokenizer'\nimport loginService from '../services/LoginService'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst LoginPage = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const messager = useMessager()\n  const tokenizer = useTokenizer()\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login(username, password)\n      window.localStorage.setItem('domzzerUser', JSON.stringify(user))\n      tokenizer.updateServicesWithToken(user.token)\n      dispatch(setUser(user))\n      messager.showInfoMessage(`Welcome, ${user.username}`)\n      history.push(\"/\")   \n    } catch (exception) {\n      const error = exception.response.data.error || \"Could not login. Server is likely offline!\"\n      messager.showErrorMessage(error)\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n\n        <Typography gutterBottom variant=\"h3\">domzzer login</Typography>\n\n        <form onSubmit={handleLogin} className={classes.form}>\n\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(event) => setUsername(event.target.value)}\n            value={username}\n          />\n\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n            value={password}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log in\n          </Button>\n\n        </form>\n\n      </div>\n    </Container>\n  )\n}\n\nexport default LoginPage","const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import React from 'react'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst ServerInfo = ({ serverInfo }) => {\n  \n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  \n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default ServerInfo","import React from 'react'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default VulnerabilityInfo","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport ServerInfo from './ServerInfo'\nimport VulnerabilityInfo from './VulnerabilityInfo'\n\nconst HomePage = () => {\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve server information!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default HomePage","import React, { useState } from 'react'\n\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst NewSlavePage = () => {\n  const messager = useMessager()\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const addSlave = (event) => {\n    event.preventDefault()\n\n    const newSlave = { name, address, username, password }\n\n    slaveService.create(newSlave)\n      .then(() => {\n        messager.showInfoMessage(\"Succesfully added new slave to database!\")\n        setName('')\n        setAddress('')\n        setUsername('')\n        setPassword('')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not save slave data to server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New Slave</Typography>\n\n          <form onSubmit={addSlave} className={classes.form}>\n\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setName(event.target.value)}\n              value={name}\n            />\n\n            <TextField\n              label=\"Address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setAddress(event.target.value)}\n              value={address}\n            />\n\n            <TextField\n              label=\"Username (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              onChange={(event) => setUsername(event.target.value)}\n              value={username}\n            />\n\n            <TextField\n              label=\"Password (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Add</Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewSlavePage","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const setSlaves = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import { withStyles } from \"@material-ui/core/styles\"\nimport TableRow from '@material-ui/core/TableRow'\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow)\n\nexport default StyledTableRow","import { withStyles } from \"@material-ui/core/styles\"\nimport TableCell from '@material-ui/core/TableCell'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell)\n\nexport default StyledTableCell","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst SlaveTable = ({ slaves }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, slaves.length - page * rowsPerPage);\n\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>Server name</StyledTableCell>\n            <StyledTableCell>Server address</StyledTableCell>\n            <StyledTableCell>Server status</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {slaves\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(s =>\n              <StyledTableRow key={s.id}>\n                <StyledTableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{s.address}</StyledTableCell>\n                <StyledTableCell align=\"left\">{s.status}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={slaves.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer>\n  )\n}\n\nexport default SlaveTable","import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setSlaves } from '../reducers/SlaveReducer'\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\nimport SlaveTable from './SlaveTable'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst SlavesPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const slaves = useSelector(state => state.slaves)\n  const user = useSelector(state => state.user)\n\n  const filteredSlaves = slaves.filter(s => {\n    if (s.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.address.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.status.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(resultSlaves => dispatch(setSlaves(resultSlaves)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Slaves</h1>\n\n      <Grid container spacing={3} justify=\"flex-start\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n        {user !== null && user.userRole !== 'LITE' &&\n          <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/slaves/new\"\n            >add new slave</Button>\n          </Grid>\n        }\n      </Grid>\n\n      <SlaveTable slaves={filteredSlaves} />\n    </div>\n  )\n}\n\nexport default SlavesPage","import React, { useState } from 'react'\n\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSlaves } from '../reducers/SlaveReducer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst EditSlaveForm = ({ slave }) => {\n  const classes = useStyles()\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const slaves = useSelector(state => state.slaves)\n  const loggeduser = useSelector(state => state.user)\n  const [editMode, setEditMode] = useState(false)\n  const [name, setName] = useState(slave.name)\n  const [address, setAddress] = useState(slave.address)\n  const [username, setUsername] = useState(slave.username || '')\n  const [password, setPassword] = useState(slave.password || '')\n\n  const updateSlave = (event) => {\n    event.preventDefault()\n    const updatedSlaveData = { name, address, username, password }\n    slaveService\n      .update(slave.id, updatedSlaveData)\n      .then(resultSlave => {\n        messager.showInfoMessage('Slave data succesfully updated!')\n        const editedSlaves = slaves.map(s => s.id === resultSlave.id ? resultSlave : s)\n        dispatch(setSlaves(editedSlaves))\n        setEditMode(false)\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not update slave data on server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      {editMode && <Typography align=\"center\" gutterBottom variant=\"h3\">Editing Slave</Typography>}\n\n      <form onSubmit={updateSlave} className={classes.form}>\n\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={name}\n          disabled={!editMode}\n          onChange={(event) => setName(event.target.value)}\n        />\n\n        <TextField\n          label=\"Address\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={address}\n          disabled={!editMode}\n          onChange={(event) => setAddress(event.target.value)}\n        />\n\n        <TextField\n          label=\"Username (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          value={username}\n          disabled={!editMode}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n\n        <TextField\n          label=\"Password (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          type=\"password\"\n          value={password}\n          disabled={!editMode}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        {editMode &&\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n        }\n\n      </form>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n\n          {loggeduser.userRole !== 'LITE' &&\n            <Button\n              style={{ marginTop: 25 }}\n              onClick={() => {\n                setEditMode(!editMode)\n                setUsername(slave.username || '')\n                setPassword(slave.password || '')\n                setAddress(slave.address)\n                setName(slave.name)\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              {editMode === false ? 'Edit information' : 'Stop editing'}\n            </Button>\n          }\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default EditSlaveForm","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport slaveService from '../services/SlaveService'\nimport { setSlaves, slaveInsert } from '../reducers/SlaveReducer'\nimport { useMessager } from '../hooks/Messager'\nimport EditSlaveForm from './EditSlaveForm'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst SlavePage = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const user = useSelector(state => state.user)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    slaveService.remove(id)\n      .then(() => {\n        messager.showInfoMessage('Slave data succesfully deleted!')\n        const filteredSlaves = slaves.filter(s => s.id !== id)\n        dispatch(setSlaves(filteredSlaves))\n        history.push('/slaves')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not delete slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Slaves / 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / {slave.name} </h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <EditSlaveForm slave={slave} />\n        </div>\n      </Container>\n\n      {user !== null && user.userRole !== 'LITE' &&\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Grid item xs>\n            <Button\n              style={{ marginTop: 25 }}\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={deleteSlave}\n            >\n              Remove from database\n            </Button>\n          </Grid>\n        </Grid>\n      }\n    </div>\n  )\n}\n\nexport default SlavePage","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const setVulnerabilities = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, vulnerabilities.length - page * rowsPerPage);\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>ID</StyledTableCell>\n            <StyledTableCell>Target browser</StyledTableCell>\n            <StyledTableCell>Timestamp</StyledTableCell>\n            <StyledTableCell>Status</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(v =>\n              <StyledTableRow key={v.id}>\n                <StyledTableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{v.targetBrowser}</StyledTableCell>\n                <StyledTableCell align=\"left\">{v.timestamp}</StyledTableCell>\n                <StyledTableCell align=\"left\">{v.status}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={vulnerabilities.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer >\n  )\n}\n\nexport default VulnerabilityTable","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { setVulnerabilities } from '../reducers/VulnerabilityReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport VulnerabilityTable from './VulnerabilityTable'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst VulnerabilitiesPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  const filteredVulnerabilities = vulnerabilities.filter(v => {\n    if (v.serverAddress.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (v.targetBrowser.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (v.timestamp.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (v.status.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(setVulnerabilities(vulnerabilities)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities</h1>\n\n      <Grid container spacing={3} justify=\"flex-start\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <VulnerabilityTable vulnerabilities={filteredVulnerabilities} />\n    </div>\n  )\n}\n\nexport default VulnerabilitiesPage","import React, { useState } from 'react'\n\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst EditVulnerabilityForm = ({ vulnerability }) => {\n  const classes = useStyles()\n  const messager = useMessager()\n  const [editMode, setEditMode] = useState(false)\n  const [status, setStatus] = useState(vulnerability.status)\n\n  const updateVulnerability = (event) => {\n    event.preventDefault()\n    const updatedVulnerabilityData = { ...vulnerability, status }\n    vulnerabilityService\n      .update(vulnerability.id, updatedVulnerabilityData)\n      .then(() => {\n        messager.showInfoMessage('Vulnerability data succesfully updated!')\n        setEditMode(false)\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not update user data on server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      {editMode && <Typography align=\"center\" gutterBottom variant=\"h3\">Editing Vulnerability</Typography>}\n\n      <form onSubmit={updateVulnerability} className={classes.form}>\n\n        <TextField\n          label=\"Server address\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={vulnerability.serverAddress}\n          disabled\n        />\n\n        <TextField\n          label=\"Target browser\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={vulnerability.targetBrowser}\n          disabled\n        />\n\n        <TextField\n          label=\"Timestamp\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={vulnerability.timestamp}\n          disabled\n        />\n\n        <FormControl\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n          disabled={!editMode}\n        >\n          <InputLabel id=\"select-status-label\">User Role</InputLabel>\n          <Select\n            labelId=\"select-status-label\"\n            id=\"select-status\"\n            value={status}\n            onChange={(event) => setStatus(event.target.value)}\n            label=\"Status\"\n          >\n            <MenuItem value={'OPEN'}>OPEN</MenuItem>\n            <MenuItem value={'ZERODAY'}>ZERODAY</MenuItem>\n            <MenuItem value={'CLOSED'}>CLOSED</MenuItem>\n          </Select>\n        </FormControl>\n\n        {editMode &&\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n        }\n\n      </form>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n          <Button\n            style={{ marginTop: 25 }}\n            onClick={() => {\n              setEditMode(!editMode)\n              setStatus(vulnerability.status)\n            }}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"large\"\n          >\n            {editMode === false ? 'Edit information' : 'Stop editing'}\n          </Button>\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default EditVulnerabilityForm","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert, setVulnerabilities } from '../reducers/VulnerabilityReducer'\nimport { useMessager } from '../hooks/Messager'\n\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport EditVulnerabilityForm from './EditVulnerabilityForm'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst VulnerabilityPage = () => {\n  const history = useHistory()\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const id = useParams().id\n  const loggedUser = useSelector(state => state.user)\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve vulnerability data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteVulnerability = () => {\n    vulnerabilityService.remove(id)\n      .then(() => {\n        messager.showInfoMessage('Vulnerability data succesfully deleted!')\n        const filteredVulnerabilities = vulnerabilities.filter(v => v.id !== id)\n        dispatch(setVulnerabilities(filteredVulnerabilities))\n        history.push('/vulnerabilities')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not delete vulnerability data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Vulnerabilities / 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities / {vulnerability.id} </h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <EditVulnerabilityForm vulnerability={vulnerability} />\n        </div>\n      </Container>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        {loggedUser !== null && loggedUser.userRole !== 'LITE' &&\n          <Grid item xs>\n            <Button\n              style={{ marginTop: 25 }}\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={deleteVulnerability} >\n              Remove from database\n            </Button>\n          </Grid>\n        }\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default VulnerabilityPage","import React, { useState } from 'react'\n\nimport userService from '../services/UserService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst NewUserPage = () => {\n  const messager = useMessager()\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [userRole, setUserRole] = useState('LITE')\n  const [password, setPassword] = useState('')\n\n  const addUser = (event) => {\n    event.preventDefault()\n\n    const newUser = { username, userRole, password }\n\n    userService.create(newUser)\n      .then(() => {\n        messager.showInfoMessage(\"Succesfully added new user to database!\")\n        setUsername('')\n        setUserRole('')\n        setPassword('')\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || 'Could not add new slave to database!'\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Users / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New User</Typography>\n\n          <form onSubmit={addUser} className={classes.form}>\n\n            <TextField\n              label=\"Username\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setUsername(event.target.value)}\n              value={username}\n            />\n\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n            />\n\n            <FormControl\n              margin=\"normal\"\n              fullWidth\n              variant=\"outlined\"\n            >\n              <InputLabel id=\"select-user-role-label\">User Role</InputLabel>\n              <Select\n                labelId=\"select-user-role-label\"\n                id=\"select-user-role\"\n                value={userRole}\n                onChange={(event) => setUserRole(event.target.value)}\n                label=\"User Role\"\n              >\n                <MenuItem value={'LITE'}>LITE</MenuItem>\n                <MenuItem value={'PRO'}>PRO</MenuItem>\n                <MenuItem value={'ADMIN'}>ADMIN</MenuItem>\n              </Select>\n            </FormControl>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Add</Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewUserPage","\nconst allUsersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ALL_USERS':\n      return action.allUsers\n    case 'RESET_ALL_USERS':\n      return []\n    case 'INSERT_USER':\n      if (state.find(u => u.id === action.user.id)) {\n        return state\n      }\n      return state.concat(action.user)\n    default:\n      return state\n  }\n}\n\nexport const setAllUsers = allUsers => {\n  return {\n    type: 'SET_ALL_USERS',\n    allUsers\n  }\n}\n\nexport const resetAllUsers = () => {\n  return {\n    type: 'RESET_ALL_USERS',\n  }\n}\n\nexport const insertUser = (user) => {\n  return {\n    type: 'INSERT_USER',\n    user\n  }\n}\n\nexport default allUsersReducer","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst UserTable = ({ users }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, users.length - page * rowsPerPage);\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>Username</StyledTableCell>\n            <StyledTableCell>User Role</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {users\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(u =>\n              <StyledTableRow key={u.id}>\n                <StyledTableCell align=\"left\"><Link to={`/users/${u.id}`}>{u.username}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{u.userRole}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={users.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer >\n  )\n}\n\nexport default UserTable","import { Link } from \"react-router-dom\"\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport userService from '../services/UserService'\nimport { setAllUsers } from '../reducers/AllUsersReducer'\nimport UserTable from './UserTable'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst UsersPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const users = useSelector(state => state.allUsers)\n\n  const filteredUsers = users.filter(u => {\n    if (u.username.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (u.userRole.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    userService\n      .getAll()\n      .then(users => dispatch(setAllUsers(users)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve user data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Users</h1>\n\n      <Grid container spacing={3} justify=\"flex-start\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n        <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            component={Link}\n            to=\"/users/new\"\n          >add new user</Button>\n        </Grid>\n\n      </Grid>\n\n      <UserTable users={filteredUsers} />\n    </div>\n  )\n}\n\nexport default UsersPage","import React, { useState } from 'react'\n\nimport userService from '../services/UserService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst EditUserForm = ({ user }) => {\n  const classes = useStyles()\n  const messager = useMessager()\n  const [editMode, setEditMode] = useState(false)\n  const [username, setUsername] = useState(user.username)\n  const [password, setPassword] = useState('')\n  const [userRole, setUserRole] = useState(user.userRole)\n\n  const updateUser = (event) => {\n    event.preventDefault()\n    const updatedUserData = { username, password, userRole }\n    userService\n      .update(user.id, updatedUserData)\n      .then(updatedUser => {\n        messager.showInfoMessage('User data succesfully updated!')\n        setEditMode(false)\n        setPassword('')\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not update user data on server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      {editMode && <Typography align=\"center\" gutterBottom variant=\"h3\">Editing User</Typography>}\n\n      <form onSubmit={updateUser} className={classes.form}>\n\n        <TextField\n          label=\"Username\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          value={username}\n          disabled={!editMode}\n        />\n\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          type=\"password\"\n          onChange={(event) => setPassword(event.target.value)}\n          value={password}\n          disabled={!editMode}\n        />\n\n        <FormControl\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n          disabled={!editMode}\n        >\n          <InputLabel id=\"select-user-role-label\">User Role</InputLabel>\n          <Select\n            labelId=\"select-user-role-label\"\n            id=\"select-user-role\"\n            value={userRole}\n            onChange={(event) => setUserRole(event.target.value)}\n            label=\"User Role\"\n          >\n            <MenuItem value={'LITE'}>LITE</MenuItem>\n            <MenuItem value={'PRO'}>PRO</MenuItem>\n            <MenuItem value={'ADMIN'}>ADMIN</MenuItem>\n          </Select>\n        </FormControl>\n\n        {editMode &&\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n        }\n\n      </form>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n          <Button\n            style={{ marginTop: 25 }}\n            onClick={() => {\n              setEditMode(!editMode)\n              setUsername(user.username)\n              setUserRole(user.userRole)\n            }}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"large\"\n          >\n            {editMode === false ? 'Edit information' : 'Stop editing'}\n          </Button>\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default EditUserForm","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport userService from '../services/UserService'\nimport { useMessager } from '../hooks/Messager'\nimport { insertUser, setAllUsers } from '../reducers/AllUsersReducer'\nimport EditUserForm from './EditUserForm'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst UserPage = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const id = useParams().id\n  const allUsers = useSelector(state => state.allUsers)\n  const loggedUser = useSelector(state => state.user)\n  const user = allUsers.find(u => u.id === id)\n\n  useEffect(() => {\n    userService.getById(id)\n      .then(user => {\n        dispatch(insertUser(user))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve user data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    userService.remove(id)\n      .then(() => {\n        messager.showInfoMessage('User data succesfully deleted!')\n        const filteredUsers = allUsers.filter(u => u.id !== id)\n        dispatch(setAllUsers(filteredUsers))\n        history.push('/users')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not delete user data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  if (user === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Users / 404 (User not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Users / {user.username} </h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <EditUserForm user={user} />\n        </div>\n      </Container>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        {loggedUser !== null && loggedUser.userRole === 'ADMIN' &&\n          <Grid item xs>\n            <Button\n              style={{ marginTop:25 }}\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={deleteSlave} >\n              Remove from database\n            </Button>\n          </Grid>\n        }\n      </Grid>\n    </div>\n  )\n}\n\nexport default UserPage","const settingsReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SETTINGS':\n      return action.settings\n    default:\n      return state\n  }\n}\n\nexport const setSettings = settings => {\n  return {\n    type: 'SET_SETTINGS',\n    settings\n  }\n}\n\nexport default settingsReducer","import React, { useState } from 'react'\n\nimport { useMessager } from '../hooks/Messager'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport settingsService from '../services/SettingsService'\nimport { setSettings } from '../reducers/SettingsReducer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst EditSettingsForm = ({ slave }) => {\n  const classes = useStyles()\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const loggeduser = useSelector(state => state.user)\n  const settings = useSelector(state => state.settings)\n  const [editMode, setEditMode] = useState(false)\n  const [pollInterval, setPollInterval] = useState(settings.pollInterval || 10)\n\n  const updateSettings = (event) => {\n    event.preventDefault()\n    const updatedSettings = { pollInterval }\n    settingsService\n      .update(updatedSettings)\n      .then(resultSettings => {\n        messager.showInfoMessage('Settings succesfully updated!')\n        dispatch(setSettings(resultSettings))\n        setEditMode(false)\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not update settings on server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      {editMode && <Typography align=\"center\" gutterBottom variant=\"h3\">Editing Settings</Typography>}\n\n      <form onSubmit={updateSettings} className={classes.form}>\n\n        <FormControl\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n          disabled={!editMode}\n        >\n          <InputLabel id=\"select-intaval-label\">Slave polling inteval</InputLabel>\n          <Select\n            labelId=\"select-interval-label\"\n            id=\"select-interval\"\n            value={pollInterval}\n            defaultValue={10}\n            onChange={(event) => setPollInterval(event.target.value)}\n            label=\"Slave polling inteval\"\n          >\n            <MenuItem value={10}>10 minutes</MenuItem>\n            <MenuItem value={20}>20 minutes</MenuItem>\n            <MenuItem value={30}>30 minutes</MenuItem>\n            <MenuItem value={60}>1 hour</MenuItem>\n          </Select>\n        </FormControl>\n\n        {editMode &&\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n        }\n\n      </form>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n\n          {loggeduser.userRole !== 'LITE' &&\n            <Button\n              style={{ marginTop: 25 }}\n              onClick={() => {\n                setEditMode(!editMode)\n                setPollInterval(settings.pollInterval || 10)\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              {editMode === false ? 'Edit information' : 'Stop editing'}\n            </Button>\n          }\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default EditSettingsForm","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport EditSettingsForm from './EditSettingsForm'\nimport { setSettings } from '../reducers/SettingsReducer'\nimport settingsService from '../services/SettingsService'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\n\nconst SettingsPage = () => {\n  const dispatch = useDispatch()\n  const classes = useStyles()\n  const messager = useMessager()\n  const loggedUser = useSelector(state => state.user)\n  let settings = useSelector(state => state.settings)\n\n  useEffect(() => {\n    settingsService.get()\n      .then(serverSettings => {\n        dispatch(setSettings(serverSettings))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve server settings!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handlePollButtonClick = () => {\n    if (!settings.isPolling) {\n      settingsService\n        .sendStartCommand()\n        .then(() => {\n          messager.showInfoMessage('Succesfully started server to poll slaves!')\n          dispatch(setSettings({ ...settings, isPolling: true }))\n        })\n        .catch(exception => {\n          const error = exception.response.data.error || \"Could not start server to poll slaves!\"\n          messager.showErrorMessage(error)\n        })\n    } else {\n      settingsService\n        .sendStopCommand()\n        .then(() => {\n          messager.showInfoMessage('Succesfully stopped server from polling slaves!')\n          dispatch(setSettings({ ...settings, isPolling: false }))\n        })\n        .catch(exception => {\n          const error = exception.response.data.error || \"Could not stop from polling slaves!\"\n          messager.showErrorMessage(error)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Settings </h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <EditSettingsForm settings={settings} />\n        </div>\n      </Container>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        {loggedUser !== null && loggedUser.userRole === 'ADMIN' &&\n          <Grid item xs>\n            <Button\n              style={{ marginTop: 25 }}\n              color={settings.isPolling === true ? \"secondary\" : \"primary\"}\n              variant=\"contained\"\n              size=\"large\"\n              onClick={handlePollButtonClick}\n            >\n              {settings.isPolling === true ? \"stop polling slaves\" : \"start polling slaves\"}\n            </Button>\n          </Grid>\n        }\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default SettingsPage","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Link, useHistory, Redirect } from \"react-router-dom\"\n\nimport InfoNotification from './components/InfoNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport LoginPage from './components/LoginPage'\nimport HomePage from './components/HomePage'\nimport NewSlavePage from './components/NewSlavePage'\nimport SlavesPage from './components/SlavesPage'\nimport SlavePage from './components/SlavePage'\nimport VulnerabilitiesPage from './components/VulnerabilitiesPage'\nimport VulnerabilityPage from './components/VulnerabilityPage'\nimport NewUserPage from './components/NewUserPage'\nimport UsersPage from './components/UsersPage'\nimport UserPage from './components/UserPage'\nimport SettingsPage from './components/SettingsPage'\nimport { setUser, resetUser } from './reducers/UserReducer'\nimport { useTokenizer } from './hooks/Tokenizer'\nimport userService from './services/UserService'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Container from '@material-ui/core/Container'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  rightToolbar: {\n    marginLeft: \"auto\"\n  }\n}))\n\nfunction App() {\n  const tokenizer = useTokenizer()\n  const history = useHistory()\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  let user = useSelector(state => state.user)\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }\n\n  const handleLogout = () => {\n    setAnchorEl(null)\n    dispatch(resetUser())\n    window.localStorage.removeItem('domzzerUser')\n    history.push('/login')\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('domzzerUser')\n    if (loggedUserJSON) {\n      const tokenuser = JSON.parse(loggedUserJSON)\n      dispatch(setUser(tokenuser))\n      tokenizer.updateServicesWithToken(tokenuser.token)\n      userService.getById(tokenuser.id).then(() => {\n        return\n      }).catch(() => {\n        dispatch(resetUser())\n        tokenizer.clearServicesFromToken()\n        window.localStorage.removeItem('domzzerUser')\n      })\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            {user !== null &&\n              <div>\n                <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n                <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n                <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n                {user.userRole === 'ADMIN' && <Button color=\"inherit\" component={Link} to=\"/users\">users</Button>}\n                {user.userRole === 'ADMIN' && <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>}\n              </div>\n            }\n            {user !== null &&\n              <div className={classes.rightToolbar}>\n                <IconButton\n                  color=\"inherit\"\n                  aria-controls=\"simple-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                >\n                  <Avatar>{user.username[0].toUpperCase()}</Avatar>\n                </IconButton>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose} component={Link} to={`/users/${user.id}`}>Profile settings</MenuItem>\n                  <MenuItem onClick={handleLogout} component={Link} to=\"/login\">Logout</MenuItem>\n                </Menu>\n              </div>\n            }\n          </Toolbar>\n        </AppBar>\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <InfoNotification />\n            <ErrorNotification />\n\n            <Switch>\n              <Route path=\"/login\">\n                {user === null ? <LoginPage /> : <Redirect to=\"/\" />}\n              </Route>\n              <Route path=\"/settings\">\n                {user !== null && user.userRole === 'ADMIN' ? <SettingsPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/users/new\">\n                {user !== null && user.userRole === 'ADMIN' ? <NewUserPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/users/:id\">\n                {user !== null ? <UserPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/users\">\n                {user !== null && user.userRole === 'ADMIN' ? <UsersPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/vulnerabilities/:id\">\n                {user !== null ? <VulnerabilityPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/vulnerabilities\">\n                {user !== null ? <VulnerabilitiesPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/slaves/new\">\n                {user !== null && user.userRole !== 'LITE' ? <NewSlavePage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/slaves/:id\">\n                {user !== null ? <SlavePage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/slaves\">\n                {user !== null ? <SlavesPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/\">\n                {user !== null ? <HomePage /> : <Redirect to=\"/login\" />}\n              </Route>\n            </Switch>\n          </Container>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\"\n\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\nimport infoMsgReducer from './reducers/InfoMsgReducer'\nimport errorMsgReducer from './reducers/ErrorMsgReducer'\nimport userReducer from './reducers/UserReducer'\nimport allUsersReducer from './reducers/AllUsersReducer'\nimport settingsReducer from './reducers/SettingsReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n  infoMsg: infoMsgReducer,\n  errorMsg: errorMsgReducer,\n  user: userReducer,\n  allUsers: allUsersReducer,\n  settings: settingsReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}