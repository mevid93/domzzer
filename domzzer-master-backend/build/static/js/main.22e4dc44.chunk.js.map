{"version":3,"sources":["components/InfoNotification.js","components/ErrorNotification.js","reducers/UserReducer.js","reducers/ErrorMsgReducer.js","reducers/InfoMsgReducer.js","hooks/Messager.js","services/ServerInfoService.js","services/SlaveService.js","services/UserService.js","services/VulnerabilityService.js","hooks/Tokenizer.js","services/LoginService.js","components/LoginPage.js","reducers/ServerInfoReducer.js","components/ServerInfo.js","components/VulnerabilityInfo.js","components/HomePage.js","components/NewSlavePage.js","reducers/SlaveReducer.js","components/StyledTableRow.js","components/StyledTableCell.js","components/SlaveTable.js","components/SlavesPage.js","components/EditSlaveForm.js","components/SlavePage.js","reducers/VulnerabilityReducer.js","components/VulnerabilityTable.js","components/VulnerabilitiesPage.js","components/VulnerabilityPage.js","components/NewUserPage.js","reducers/AllUsersReducer.js","components/UserTable.js","components/UsersPage.js","components/EditUserForm.js","components/UserPage.js","components/SettingsPage.js","App.js","index.js"],"names":["InfoNotification","infoMsg","useSelector","state","undefined","Alert","variant","severity","ErrorNotification","errorMsg","setUser","user","type","userReducer","action","errorMsgChange","errorMsgReducer","infoMsgChange","infoMsgReducer","useMessager","dispatch","useDispatch","showErrorMessage","message","setTimeout","showInfoMessage","token","service","getInfo","config","headers","Authorization","axios","get","then","response","data","setToken","newToken","baseUrl","getAll","getById","id","create","newSlave","post","remove","delete","update","updatedData","put","newData","useTokenizer","updateServicesWithToken","serverInfoService","slaveService","userService","vulnerabilityService","clearServicesFromToken","login","username","password","a","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","padding","margin","LoginPage","history","useHistory","messager","tokenizer","classes","useState","setUsername","setPassword","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","push","error","Container","component","maxWidth","className","Typography","gutterBottom","onSubmit","TextField","label","required","fullWidth","onChange","target","value","Button","color","serverInfoReducer","info","ServerInfo","serverInfo","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","HomePage","useEffect","serverInfoChange","catch","exception","NewSlavePage","name","setName","address","setAddress","setSlaves","slaves","slaveReducer","find","s","slave","concat","StyledTableRow","withStyles","root","backgroundColor","palette","hover","StyledTableCell","head","common","black","white","body","fontSize","SlaveTable","page","setPage","rowsPerPage","emptyRows","Math","min","length","style","TableHead","slice","map","to","status","height","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","SlavesPage","filter","setFilter","filteredSlaves","toLowerCase","includes","resultSlaves","Grid","container","justify","item","xs","justifyContent","placeholder","userRole","Link","EditSlaveForm","loggeduser","editMode","setEditMode","updatedSlaveData","resultSlave","editedSlaves","disabled","direction","gridItem","onClick","size","flexGrow","SlavePage","useParams","slaveInsert","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","targetBrowser","timestamp","VulnerabilitiesPage","filteredVulnerabilities","serverAddress","vulnerabilitiesChange","VulnerabilityPage","vulnerabilityInsert","NewUserPage","setUserRole","newUser","FormControl","InputLabel","Select","labelId","MenuItem","setAllUsers","allUsers","allUsersReducer","u","UserTable","users","UsersPage","filteredUsers","EditUserForm","updateUser","updatedUserData","updatedUser","console","log","UserPage","loggedUser","insertUser","SettingsPage","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarSpacer","mixins","toolbar","content","overflow","paddingTop","paddingBottom","rightToolbar","marginLeft","App","anchorEl","setAnchorEl","handleClose","loggedUserJSON","getItem","parse","removeItem","CssBaseline","AppBar","position","Toolbar","IconButton","aria-controls","aria-haspopup","currentTarget","Avatar","toUpperCase","Menu","keepMounted","open","Boolean","onClose","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.22e4dc44.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst InfoNotification = () => {\n  const infoMsg = useSelector(state => state.infoMsg)\n\n  return (\n    <div>\n      {(infoMsg !== null && infoMsg !== undefined) && <Alert variant=\"filled\" severity=\"success\">{infoMsg}</Alert>}\n    </div >\n  )\n}\n\nexport default InfoNotification","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst ErrorNotification = () => {\n  const errorMsg = useSelector(state => state.errorMsg)\n\n  return (\n    <div>\n      {(errorMsg !== null && errorMsg !== undefined) && <Alert variant=\"filled\" severity=\"error\">{errorMsg}</Alert>}\n    </div>\n  )\n}\n\nexport default ErrorNotification","\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user\n    case 'RESET_USER':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setUser = user => {\n  return {\n    type: 'SET_USER',\n    user\n  }\n}\n\nexport const resetUser = () => {\n  return {\n    type: 'RESET_USER',\n  }\n}\n\nexport default userReducer","const errorMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      if (action.errorMsg === undefined){\n        return null\n      }\n      return action.errorMsg\n    default:\n      return state\n  }\n}\n\nexport const errorMsgChange = errorMsg => {\n  return {\n    type: 'SET_ERROR_MESSAGE',\n    errorMsg\n  }\n}\n\nexport default errorMsgReducer","const infoMsgReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_INFO_MESSAGE':\n        if (action.infoMsg === undefined){\n          return null\n        }\n        return action.infoMsg\n      default:\n        return state\n    }\n  }\n  \n  export const infoMsgChange = infoMsg => {\n    return {\n      type: 'SET_INFO_MESSAGE',\n      infoMsg\n    }\n  }\n  \n  export default infoMsgReducer","import { useDispatch } from 'react-redux'\n\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport { infoMsgChange } from '../reducers/InfoMsgReducer'\n\nconst MSG_DISPLAY_TIME = 5000\n\nconst useMessager = () => {\n  const dispatch = useDispatch()\n\n  const showInfoMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(infoMsgChange(message))\n    setTimeout(() => {\n      dispatch(infoMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  const showErrorMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(errorMsgChange(message))\n    setTimeout(() => {\n      dispatch(errorMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  return {\n    showErrorMessage,\n    showInfoMessage,\n  }\n}\n\nexport { useMessager }","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getInfo = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst create = (newSlave) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl, newSlave, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = (id, updatedData) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.put(`${baseUrl}/${id}`, updatedData, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, update, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst create = (user) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl, user, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newData) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.put(`${baseUrl}/${id}`, newData, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, update, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, setToken }\nexport default service","import serverInfoService from '../services/ServerInfoService'\nimport slaveService from '../services/SlaveService'\nimport userService from '../services/UserService'\nimport vulnerabilityService from '../services/VulnerabilityService'\n\nconst useTokenizer = () => {\n  \n  const updateServicesWithToken = (token) => {\n    serverInfoService.setToken(token)\n    slaveService.setToken(token)\n    userService.setToken(token)\n    vulnerabilityService.setToken(token)\n  }\n\n  const clearServicesFromToken = () => {\n    updateServicesWithToken(null)\n  }\n\n  return { updateServicesWithToken, clearServicesFromToken }\n}\n\nexport { useTokenizer }","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (username, password) => {\n  const response = await axios.post(baseUrl, { username, password })\n  return response.data\n}\n\nconst service = { login }\nexport default service","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\n\nimport { setUser } from '../reducers/UserReducer'\nimport { useMessager } from '../hooks/Messager'\nimport { useTokenizer } from '../hooks/Tokenizer'\nimport loginService from '../services/LoginService'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst LoginPage = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const messager = useMessager()\n  const tokenizer = useTokenizer()\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login(username, password)\n      window.localStorage.setItem('domzzerUser', JSON.stringify(user))\n      tokenizer.updateServicesWithToken(user.token)\n      dispatch(setUser(user))\n      messager.showInfoMessage(`Welcome to domzzer, ${user.username}`)\n      history.push(\"/\")   \n    } catch (exception) {\n      messager.showErrorMessage(exception.response.data.error)\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n\n        <Typography gutterBottom variant=\"h3\">domzzer login</Typography>\n\n        <form onSubmit={handleLogin} className={classes.form}>\n\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(event) => setUsername(event.target.value)}\n            value={username}\n          />\n\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n            value={password}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log in\n          </Button>\n\n        </form>\n\n      </div>\n    </Container>\n  )\n}\n\nexport default LoginPage","const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import React from 'react'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst ServerInfo = ({ serverInfo }) => {\n  \n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  \n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default ServerInfo","import React from 'react'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default VulnerabilityInfo","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport ServerInfo from './ServerInfo'\nimport VulnerabilityInfo from './VulnerabilityInfo'\n\nconst HomePage = () => {\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve server information!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default HomePage","import React, { useState } from 'react'\n\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst NewSlavePage = () => {\n  const messager = useMessager()\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const addSlave = (event) => {\n    event.preventDefault()\n\n    const newSlave = { name, address, username, password }\n\n    slaveService.create(newSlave)\n      .then(() => {\n        messager.showInfoMessage(\"Succesfully added new slave to database!\")\n        setName('')\n        setAddress('')\n        setUsername('')\n        setPassword('')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not save slave data to server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New Slave</Typography>\n\n          <form onSubmit={addSlave} className={classes.form}>\n\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setName(event.target.value)}\n              value={name}\n            />\n\n            <TextField\n              label=\"Address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setAddress(event.target.value)}\n              value={address}\n            />\n\n            <TextField\n              label=\"Username (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              onChange={(event) => setUsername(event.target.value)}\n              value={username}\n            />\n\n            <TextField\n              label=\"Password (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Add</Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewSlavePage","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const setSlaves = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import { withStyles } from \"@material-ui/core/styles\"\nimport TableRow from '@material-ui/core/TableRow'\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow)\n\nexport default StyledTableRow","import { withStyles } from \"@material-ui/core/styles\"\nimport TableCell from '@material-ui/core/TableCell'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell)\n\nexport default StyledTableCell","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst SlaveTable = ({ slaves }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, slaves.length - page * rowsPerPage);\n\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>Server name</StyledTableCell>\n            <StyledTableCell>Server address</StyledTableCell>\n            <StyledTableCell>Server status</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {slaves\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(s =>\n              <StyledTableRow key={s.id}>\n                <StyledTableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{s.address}</StyledTableCell>\n                <StyledTableCell align=\"left\">{s.status}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={slaves.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer>\n  )\n}\n\nexport default SlaveTable","import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { setSlaves } from '../reducers/SlaveReducer'\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\nimport SlaveTable from './SlaveTable'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst SlavesPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const slaves = useSelector(state => state.slaves)\n  const user = useSelector(state => state.user)\n\n  const filteredSlaves = slaves.filter(s => {\n    if (s.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.address.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.status.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(resultSlaves => dispatch(setSlaves(resultSlaves)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Slaves</h1>\n\n      <Grid container spacing={3} justify=\"flex-start\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n        {user !== null && user.userRole !== 'LITE' &&\n          <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              component={Link}\n              to=\"/slaves/new\"\n            >add new slave</Button>\n          </Grid>\n        }\n      </Grid>\n\n      <SlaveTable slaves={filteredSlaves} />\n    </div>\n  )\n}\n\nexport default SlavesPage","import React, { useState } from 'react'\n\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSlaves } from '../reducers/SlaveReducer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst EditSlaveForm = ({ slave }) => {\n  const classes = useStyles()\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const slaves = useSelector(state => state.slaves)\n  const loggeduser = useSelector(state => state.user)\n  const [editMode, setEditMode] = useState(false)\n  const [name, setName] = useState(slave.name)\n  const [address, setAddress] = useState(slave.address)\n  const [username, setUsername] = useState(slave.username || '')\n  const [password, setPassword] = useState(slave.password || '')\n\n  const updateSlave = (event) => {\n    event.preventDefault()\n    const updatedSlaveData = { name, address, username, password }\n    slaveService\n      .update(slave.id, updatedSlaveData)\n      .then(resultSlave => {\n        messager.showInfoMessage('Slave data succesfully updated!')\n        const editedSlaves = slaves.map(s => s.id === resultSlave.id ? resultSlave : s)\n        dispatch(setSlaves(editedSlaves))\n        setEditMode(false)\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not update slave data on server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      {editMode && <Typography align=\"center\" gutterBottom variant=\"h3\">Editing Slave</Typography>}\n\n      <form onSubmit={updateSlave} className={classes.form}>\n\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={name}\n          disabled={!editMode}\n          onChange={(event) => setName(event.target.value)}\n        />\n\n        <TextField\n          label=\"Address\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={address}\n          disabled={!editMode}\n          onChange={(event) => setAddress(event.target.value)}\n        />\n\n        <TextField\n          label=\"Username (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          value={username}\n          disabled={!editMode}\n          onChange={(event) => setUsername(event.target.value)}\n        />\n\n        <TextField\n          label=\"Password (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          type=\"password\"\n          value={password}\n          disabled={!editMode}\n          onChange={(event) => setPassword(event.target.value)}\n        />\n\n        {editMode &&\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n        }\n\n      </form>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n\n          {loggeduser.userRole !== 'LITE' &&\n            <Button\n              style={{ marginTop: 25 }}\n              onClick={() => {\n                setEditMode(!editMode)\n                setUsername(slave.username || '')\n                setPassword(slave.password || '')\n                setAddress(slave.address)\n                setName(slave.name)\n              }}\n              color=\"primary\"\n              variant=\"contained\"\n              size=\"large\"\n            >\n              {editMode === false ? 'Edit information' : 'Stop editing'}\n            </Button>\n          }\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default EditSlaveForm","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport slaveService from '../services/SlaveService'\nimport { setSlaves, slaveInsert } from '../reducers/SlaveReducer'\nimport { useMessager } from '../hooks/Messager'\nimport EditSlaveForm from './EditSlaveForm'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst SlavePage = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const user = useSelector(state => state.user)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    slaveService.remove(id)\n      .then(() => {\n        messager.showInfoMessage('Slave data succesfully deleted!')\n        const filteredSlaves = slaves.filter(s => s.id !== id)\n        dispatch(setSlaves(filteredSlaves))\n        history.push('/slaves')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not delete slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Slaves / 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / {slave.name} </h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <EditSlaveForm slave={slave} />\n        </div>\n      </Container>\n\n      {user !== null && user.userRole !== 'LITE' &&\n        <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n          <Grid item xs>\n            <Button\n              style={{ marginTop: 25 }}\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={deleteSlave}\n            >\n              Remove from database\n            </Button>\n          </Grid>\n        </Grid>\n      }\n    </div>\n  )\n}\n\nexport default SlavePage","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const vulnerabilitiesChange = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, vulnerabilities.length - page * rowsPerPage);\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>ID</StyledTableCell>\n            <StyledTableCell>Target browser</StyledTableCell>\n            <StyledTableCell>Timestamp</StyledTableCell>\n            <StyledTableCell>Status</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(v =>\n              <StyledTableRow key={v.id}>\n                <StyledTableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{v.targetBrowser}</StyledTableCell>\n                <StyledTableCell align=\"left\">{v.timestamp}</StyledTableCell>\n                <StyledTableCell align=\"left\">{v.status}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={vulnerabilities.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer >\n  )\n}\n\nexport default VulnerabilityTable","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { vulnerabilitiesChange } from '../reducers/VulnerabilityReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport VulnerabilityTable from './VulnerabilityTable'\n\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst VulnerabilitiesPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  const filteredVulnerabilities = vulnerabilities.filter(v => {\n    if (v.serverAddress.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if(v.targetBrowser.toLowerCase().includes(filter.toLowerCase())){\n      return true\n    }\n    if(v.timestamp.toLowerCase().includes(filter.toLowerCase())){\n      return true\n    }\n    if(v.status.toLowerCase().includes(filter.toLowerCase())){\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(vulnerabilitiesChange(vulnerabilities)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities</h1>\n\n      <Grid container spacing={3} justify=\"flex-start\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n      </Grid>\n\n      <VulnerabilityTable vulnerabilities={filteredVulnerabilities} />\n    </div>\n  )\n}\n\nexport default VulnerabilitiesPage","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'\nimport { useMessager } from '../hooks/Messager'\n\nconst VulnerabilityPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const id = useParams().id\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve vulnerability data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities / {vulnerability.id} </h1>\n      <h3>server address: {vulnerability.serverAddress}</h3>\n      <h3>target browser: {vulnerability.targetBrowser}</h3>\n      <h3>timestamp: {vulnerability.timestamp}</h3>\n      <h3>status: {vulnerability.status}</h3>\n    </div>\n  )\n}\n\nexport default VulnerabilityPage","import React, { useState } from 'react'\n\nimport userService from '../services/UserService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst NewUserPage = () => {\n  const messager = useMessager()\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [userRole, setUserRole] = useState('LITE')\n  const [password, setPassword] = useState('')\n\n  const addUser = (event) => {\n    event.preventDefault()\n\n    const newUser = { username, userRole, password }\n\n    userService.create(newUser)\n      .then(() => {\n        messager.showInfoMessage(\"Succesfully added new user to database!\")\n        setUsername('')\n        setUserRole('')\n        setPassword('')\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || 'Could not add new slave to database!'\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Users / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New User</Typography>\n\n          <form onSubmit={addUser} className={classes.form}>\n\n            <TextField\n              label=\"Username\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setUsername(event.target.value)}\n              value={username}\n            />\n\n            <TextField\n              label=\"Password\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n            />\n\n            <FormControl\n              margin=\"normal\"\n              fullWidth\n              variant=\"outlined\"\n            >\n              <InputLabel id=\"select-user-role-label\">User Role</InputLabel>\n              <Select\n                labelId=\"select-user-role-label\"\n                id=\"select-user-role\"\n                value={userRole}\n                onChange={(event) => setUserRole(event.target.value)}\n                label=\"User Role\"\n              >\n                <MenuItem value={'LITE'}>LITE</MenuItem>\n                <MenuItem value={'PRO'}>PRO</MenuItem>\n                <MenuItem value={'ADMIN'}>ADMIN</MenuItem>\n              </Select>\n            </FormControl>\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Add</Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewUserPage","\nconst allUsersReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ALL_USERS':\n      return action.allUsers\n    case 'RESET_ALL_USERS':\n      return []\n    case 'INSERT_USER':\n      if (state.find(u => u.id === action.user.id)) {\n        return state\n      }\n      return state.concat(action.user)\n    default:\n      return state\n  }\n}\n\nexport const setAllUsers = allUsers => {\n  return {\n    type: 'SET_ALL_USERS',\n    allUsers\n  }\n}\n\nexport const resetAllUsers = () => {\n  return {\n    type: 'RESET_ALL_USERS',\n  }\n}\n\nexport const insertUser = (user) => {\n  return {\n    type: 'INSERT_USER',\n    user\n  }\n}\n\nexport default allUsersReducer","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst UserTable = ({ users }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, users.length - page * rowsPerPage);\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>Username</StyledTableCell>\n            <StyledTableCell>User Role</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {users\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(u =>\n              <StyledTableRow key={u.id}>\n                <StyledTableCell align=\"left\"><Link to={`/users/${u.id}`}>{u.username}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{u.userRole}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={users.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer >\n  )\n}\n\nexport default UserTable","import { Link } from \"react-router-dom\"\nimport React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport userService from '../services/UserService'\nimport { setAllUsers } from '../reducers/AllUsersReducer'\nimport UserTable from './UserTable'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst UsersPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const users = useSelector(state => state.allUsers)\n\n  const filteredUsers = users.filter(u => {\n    if (u.username.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (u.userRole.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    userService\n      .getAll()\n      .then(users => dispatch(setAllUsers(users)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve user data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Users</h1>\n\n      <Grid container spacing={3} justify=\"flex-start\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n        <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            component={Link}\n            to=\"/users/new\"\n          >add new user</Button>\n        </Grid>\n\n      </Grid>\n\n      <UserTable users={filteredUsers} />\n    </div>\n  )\n}\n\nexport default UsersPage","import React, { useState } from 'react'\n\nimport userService from '../services/UserService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport FormControl from '@material-ui/core/FormControl'\nimport Select from '@material-ui/core/Select'\nimport InputLabel from '@material-ui/core/InputLabel'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst EditUserForm = ({ user }) => {\n  const classes = useStyles()\n  const messager = useMessager()\n  const [editMode, setEditMode] = useState(false)\n  const [username, setUsername] = useState(user.username)\n  const [password, setPassword] = useState('')\n  const [userRole, setUserRole] = useState(user.userRole)\n\n  const updateUser = (event) => {\n    event.preventDefault()\n    const updatedUserData = { username, password, userRole }\n    userService\n      .update(user.id, updatedUserData)\n      .then(updatedUser => {\n        messager.showInfoMessage('User data succesfully updated!')\n        console.log(updatedUser)\n        setEditMode(false)\n        setPassword('')\n      })\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not update user data on server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  return (\n    <div>\n      {editMode && <Typography align=\"center\" gutterBottom variant=\"h3\">Editing User</Typography>}\n\n      <form onSubmit={updateUser} className={classes.form}>\n\n        <TextField\n          label=\"Username\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          onChange={(event) => setUsername(event.target.value)}\n          value={username}\n          disabled={!editMode}\n        />\n\n        <TextField\n          label=\"Password\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          type=\"password\"\n          onChange={(event) => setPassword(event.target.value)}\n          value={password}\n          disabled={!editMode}\n        />\n\n        <FormControl\n          margin=\"normal\"\n          fullWidth\n          variant=\"outlined\"\n          disabled={!editMode}\n        >\n          <InputLabel id=\"select-user-role-label\">User Role</InputLabel>\n          <Select\n            labelId=\"select-user-role-label\"\n            id=\"select-user-role\"\n            value={userRole}\n            onChange={(event) => setUserRole(event.target.value)}\n            label=\"User Role\"\n          >\n            <MenuItem value={'LITE'}>LITE</MenuItem>\n            <MenuItem value={'PRO'}>PRO</MenuItem>\n            <MenuItem value={'ADMIN'}>ADMIN</MenuItem>\n          </Select>\n        </FormControl>\n\n        {editMode &&\n          <Button\n            onClick={updateUser}\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Save changes\n          </Button>\n        }\n\n      </form>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n          <Button\n            style={{ marginTop: 25 }}\n            onClick={() => {\n              setEditMode(!editMode)\n              setUsername(user.username)\n              setUserRole(user.userRole)\n            }}\n            color=\"primary\"\n            variant=\"contained\"\n            size=\"large\"\n          >\n            {editMode === false ? 'Edit information' : 'Stop editing'}\n          </Button>\n        </Grid>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default EditUserForm","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport userService from '../services/UserService'\nimport { useMessager } from '../hooks/Messager'\nimport { insertUser, setAllUsers } from '../reducers/AllUsersReducer'\nimport EditUserForm from './EditUserForm'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst UserPage = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const id = useParams().id\n  const allUsers = useSelector(state => state.allUsers)\n  const loggedUser = useSelector(state => state.user)\n  const user = allUsers.find(u => u.id === id)\n\n  useEffect(() => {\n    userService.getById(id)\n      .then(user => {\n        dispatch(insertUser(user))\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve user data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    userService.remove(id)\n      .then(() => {\n        messager.showInfoMessage('User data succesfully deleted!')\n        const filteredUsers = allUsers.filter(u => u.id !== id)\n        dispatch(setAllUsers(filteredUsers))\n        history.push('/users')\n      })\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not delete user data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }\n\n  if (user === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Users / 404 (User not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Users / {user.username} </h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <EditUserForm user={user} />\n        </div>\n      </Container>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        {loggedUser !== null && loggedUser.userRole === 'ADMIN' &&\n          <Grid item xs>\n            <Button\n              style={{ marginTop:25 }}\n              color=\"secondary\"\n              variant=\"contained\"\n              size=\"large\"\n              onClick={deleteSlave} >\n              Remove from database\n            </Button>\n          </Grid>\n        }\n      </Grid>\n    </div>\n  )\n}\n\nexport default UserPage","import React from 'react'\n\nconst SettingsPage = () => {\n  return (\n    <div>\n      <h1>domzzer / Settings </h1>\n    </div>\n  )\n}\n\nexport default SettingsPage","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Link, useHistory, Redirect } from \"react-router-dom\"\n\nimport InfoNotification from './components/InfoNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport LoginPage from './components/LoginPage'\nimport HomePage from './components/HomePage'\nimport NewSlavePage from './components/NewSlavePage'\nimport SlavesPage from './components/SlavesPage'\nimport SlavePage from './components/SlavePage'\nimport VulnerabilitiesPage from './components/VulnerabilitiesPage'\nimport VulnerabilityPage from './components/VulnerabilityPage'\nimport NewUserPage from './components/NewUserPage'\nimport UsersPage from './components/UsersPage'\nimport UserPage from './components/UserPage'\nimport SettingsPage from './components/SettingsPage'\nimport { setUser, resetUser } from './reducers/UserReducer'\nimport { useTokenizer } from './hooks/Tokenizer'\nimport userService from './services/UserService'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Container from '@material-ui/core/Container'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Avatar from '@material-ui/core/Avatar'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  rightToolbar: {\n    marginLeft: \"auto\"\n  }\n}))\n\nfunction App() {\n  const tokenizer = useTokenizer()\n  const history = useHistory()\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  }\n\n  const handleLogout = () => {\n    setAnchorEl(null)\n    dispatch(resetUser())\n    window.localStorage.removeItem('domzzerUser')\n    history.push('/login')\n  }\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('domzzerUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      tokenizer.updateServicesWithToken(user.token)\n      userService.getById(user.id).then(() => {\n        dispatch(setUser(user))\n      }).catch(error => {\n        dispatch(resetUser())\n        tokenizer.clearServicesFromToken()\n        window.localStorage.removeItem('domzzerUser')\n      })\n\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            {user !== null &&\n              <div>\n                <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n                <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n                <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n                {user.userRole === 'ADMIN' && <Button color=\"inherit\" component={Link} to=\"/users\">users</Button>}\n                {user.userRole === 'ADMIN' && <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>}\n              </div>\n            }\n            {user !== null &&\n              <div className={classes.rightToolbar}>\n                <IconButton\n                  color=\"inherit\"\n                  aria-controls=\"simple-menu\"\n                  aria-haspopup=\"true\"\n                  onClick={handleClick}\n                >\n                  <Avatar>{user.username[0].toUpperCase()}</Avatar>\n                </IconButton>\n                <Menu\n                  id=\"simple-menu\"\n                  anchorEl={anchorEl}\n                  keepMounted\n                  open={Boolean(anchorEl)}\n                  onClose={handleClose}\n                >\n                  <MenuItem onClick={handleClose} component={Link} to={`/users/${user.id}`}>Profile settings</MenuItem>\n                  <MenuItem onClick={handleLogout} component={Link} to=\"/login\">Logout</MenuItem>\n                </Menu>\n              </div>\n            }\n          </Toolbar>\n        </AppBar>\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <InfoNotification />\n            <ErrorNotification />\n\n            <Switch>\n              <Route path=\"/login\">\n                {user === null ? <LoginPage /> : <Redirect to=\"/\" />}\n              </Route>\n              <Route path=\"/settings\">\n                {user !== null && user.userRole === 'ADMIN' ? <SettingsPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/users/new\">\n                {user !== null && user.userRole === 'ADMIN' ? <NewUserPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/users/:id\">\n                {user !== null ? <UserPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/users\">\n                {user !== null && user.userRole === 'ADMIN' ? <UsersPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/vulnerabilities/:id\">\n                {user !== null ? <VulnerabilityPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/vulnerabilities\">\n                {user !== null ? <VulnerabilitiesPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/slaves/new\">\n                {user !== null && user.userRole !== 'LITE' ? <NewSlavePage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/slaves/:id\">\n                {user !== null ? <SlavePage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/slaves\">\n                {user !== null ? <SlavesPage /> : <Redirect to=\"/login\" />}\n              </Route>\n              <Route path=\"/\">\n                {user !== null ? <HomePage /> : <Redirect to=\"/login\" />}\n              </Route>\n            </Switch>\n          </Container>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\"\n\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\nimport infoMsgReducer from './reducers/InfoMsgReducer'\nimport errorMsgReducer from './reducers/ErrorMsgReducer'\nimport userReducer from './reducers/UserReducer'\nimport allUsersReducer from './reducers/AllUsersReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n  infoMsg: infoMsgReducer,\n  errorMsg: errorMsgReducer,\n  user: userReducer,\n  allUsers: allUsersReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}