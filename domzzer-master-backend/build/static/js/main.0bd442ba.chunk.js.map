{"version":3,"sources":["reducers/ServerInfoReducer.js","services/ServerInfoService.js","components/Home.js","App.js","index.js"],"names":["serverInfoReducer","state","action","type","info","service","getInfo","axios","get","then","response","data","ServerInfo","serverInfo","undefined","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","Home","dispatch","useDispatch","useSelector","useEffect","serverInfoService","serverInfoChange","catch","e","console","log","App","Container","AppBar","position","Toolbar","Button","color","component","Link","to","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bd442ba.chunk.js","sourcesContent":["const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import axios from 'axios'\nconst baseUrl = '/info'\n\nconst getInfo = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo }\nexport default service","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport { TableContainer, Table, TableBody, TableRow, TableCell } from '@material-ui/core/'\n\nconst ServerInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nconst Home = () => {\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch(e => console.log(\"Could not connect to master-server!\"))\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer - Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default Home","import {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from \"react-router-dom\"\nimport { AppBar, Container, Toolbar, Button } from '@material-ui/core/'\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <Router>\n      <Container>\n\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n            <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n            <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n            <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>\n          </Toolbar>\n        </AppBar>\n\n        <Switch>\n          <Route path=\"/settings\">\n\n          </Route>\n          <Route path=\"/vulnerabilities\">\n\n          </Route>\n          <Route path=\"/slaves\">\n\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n\n      </Container>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}