{"version":3,"sources":["components/InfoNotification.js","components/ErrorNotification.js","reducers/UserReducer.js","reducers/ErrorMsgReducer.js","reducers/InfoMsgReducer.js","hooks/Messager.js","services/ServerInfoService.js","services/SlaveService.js","services/UserService.js","services/VulnerabilityService.js","services/LoginService.js","components/LoginPage.js","hooks/Tokenizer.js","reducers/ServerInfoReducer.js","components/ServerInfo.js","components/VulnerabilityInfo.js","components/HomePage.js","components/NewSlaveForm.js","reducers/SlaveReducer.js","components/StyledTableRow.js","components/StyledTableCell.js","components/SlaveTable.js","components/SlavesPage.js","components/Slave.js","reducers/VulnerabilityReducer.js","components/VulnerabilityTable.js","components/Vulnerabilities.js","components/Vulnerability.js","App.js","index.js"],"names":["InfoNotification","infoMsg","useSelector","state","undefined","Alert","variant","severity","ErrorNotification","errorMsg","setUser","user","type","userReducer","action","errorMsgChange","errorMsgReducer","infoMsgChange","infoMsgReducer","useMessager","dispatch","useDispatch","showErrorMessage","message","setTimeout","showInfoMessage","token","service","getInfo","config","headers","Authorization","axios","get","then","response","data","setToken","newToken","baseUrl","getAll","getById","id","create","newSlave","post","remove","delete","login","username","password","a","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","form","width","submit","padding","margin","LoginPage","history","useHistory","messager","tokenizer","updateServicesWithToken","serverInfoService","slaveService","userService","vulnerabilityService","clearServicesFromToken","useTokenizer","classes","useState","setUsername","setPassword","handleLogin","event","preventDefault","loginService","window","localStorage","setItem","JSON","stringify","push","error","Container","component","maxWidth","className","Typography","gutterBottom","onSubmit","TextField","label","required","fullWidth","onChange","target","value","Button","color","serverInfoReducer","info","ServerInfo","serverInfo","serverName","TableContainer","Table","aria-label","TableBody","TableRow","TableCell","align","serverType","serverVersion","serverMemoryMb","serverDate","serverUptime","numberOfSlaves","VulnerabilityInfo","tests","numberOfTestsPerformed","vulnerabilities","numberOfPotentialVulnerabilities","ratio","HomePage","useEffect","serverInfoChange","catch","exception","NewSlaveForm","name","setName","address","setAddress","slavesChange","slaves","slaveReducer","find","s","slave","concat","StyledTableRow","withStyles","root","backgroundColor","palette","hover","StyledTableCell","head","common","black","white","body","fontSize","SlaveTable","page","setPage","rowsPerPage","emptyRows","Math","min","length","style","TableHead","slice","map","to","status","height","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","SlavesPage","filter","setFilter","filteredSlaves","toLowerCase","includes","resultSlaves","Grid","container","justify","item","xs","justifyContent","placeholder","Link","flexGrow","gridItem","SlaveForm","disabled","Slave","useParams","slaveInsert","direction","size","onClick","vulnerabilityReducer","v","vulnerability","VulnerabilityTable","serverAddress","targetBrowser","timestamp","Vulnerabilities","vulnerabilitiesChange","Vulnerability","vulnerabilityInsert","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarSpacer","mixins","toolbar","content","overflow","paddingTop","paddingBottom","App","loggedUserJSON","getItem","parse","CssBaseline","AppBar","position","Toolbar","path","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3cbcb8c6.chunk.js","sourcesContent":["import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst InfoNotification = () => {\n  const infoMsg = useSelector(state => state.infoMsg)\n\n  return (\n    <div>\n      {(infoMsg !== null && infoMsg !== undefined) && <Alert variant=\"filled\" severity=\"success\">{infoMsg}</Alert>}\n    </div >\n  )\n}\n\nexport default InfoNotification","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Alert } from '@material-ui/lab/'\n\nconst ErrorNotification = () => {\n  const errorMsg = useSelector(state => state.errorMsg)\n\n  return (\n    <div>\n      {(errorMsg !== null && errorMsg !== undefined) && <Alert variant=\"filled\" severity=\"error\">{errorMsg}</Alert>}\n    </div>\n  )\n}\n\nexport default ErrorNotification","\nconst userReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.user\n    case 'RESET_USER':\n      return null\n    default:\n      return state\n  }\n}\n\nexport const setUser = user => {\n  return {\n    type: 'SET_USER',\n    user\n  }\n}\n\nexport const resetUser = () => {\n  return {\n    type: 'resetUser',\n  }\n}\n\nexport default userReducer","const errorMsgReducer = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_ERROR_MESSAGE':\n      if (action.errorMsg === undefined){\n        return null\n      }\n      return action.errorMsg\n    default:\n      return state\n  }\n}\n\nexport const errorMsgChange = errorMsg => {\n  return {\n    type: 'SET_ERROR_MESSAGE',\n    errorMsg\n  }\n}\n\nexport default errorMsgReducer","const infoMsgReducer = (state = null, action) => {\n    switch (action.type) {\n      case 'SET_INFO_MESSAGE':\n        if (action.infoMsg === undefined){\n          return null\n        }\n        return action.infoMsg\n      default:\n        return state\n    }\n  }\n  \n  export const infoMsgChange = infoMsg => {\n    return {\n      type: 'SET_INFO_MESSAGE',\n      infoMsg\n    }\n  }\n  \n  export default infoMsgReducer","import { useDispatch } from 'react-redux'\n\nimport { errorMsgChange } from '../reducers/ErrorMsgReducer'\nimport { infoMsgChange } from '../reducers/InfoMsgReducer'\n\nconst MSG_DISPLAY_TIME = 5000\n\nconst useMessager = () => {\n  const dispatch = useDispatch()\n\n  const showInfoMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(infoMsgChange(message))\n    setTimeout(() => {\n      dispatch(infoMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  const showErrorMessage = (message) => {\n    if (message === null || message === undefined) {\n      return\n    }\n    dispatch(errorMsgChange(message))\n    setTimeout(() => {\n      dispatch(errorMsgChange(null))\n    }, MSG_DISPLAY_TIME)\n  }\n\n  return {\n    showErrorMessage,\n    showInfoMessage,\n  }\n}\n\nexport { useMessager }","import axios from 'axios'\n\nconst baseUrl = '/api/info'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getInfo = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getInfo, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/slaves'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst create = (newSlave) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl, newSlave, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/users'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst create = (user) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.post(baseUrl, user, config)\n  return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, create, remove, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/vulnerabilities'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(baseUrl, config)\n  return request.then(response => response.data)\n}\n\nconst getById = (id) => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const request = axios.get(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nconst service = { getAll, getById, setToken }\nexport default service","import axios from 'axios'\n\nconst baseUrl = '/api/login'\n\nconst login = async (username, password) => {\n  const response = await axios.post(baseUrl, { username, password })\n  return response.data\n}\n\nconst service = { login }\nexport default service","import React, { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from \"react-router-dom\"\n\nimport { setUser } from '../reducers/UserReducer'\nimport { useMessager } from '../hooks/Messager'\nimport { useTokenizer } from '../hooks/Tokenizer'\nimport loginService from '../services/LoginService'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst LoginPage = () => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const messager = useMessager()\n  const tokenizer = useTokenizer()\n  const classes = useStyles()\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login(username, password)\n      window.localStorage.setItem('domzzerUser', JSON.stringify(user))\n      tokenizer.updateServicesWithToken(user.token)\n      dispatch(setUser(user))\n      messager.showInfoMessage(`Welcome to domzzer, ${user.username}`)\n      history.push(\"/\")   \n    } catch (exception) {\n      messager.showErrorMessage(exception.response.data.error)\n    }\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n\n        <Typography gutterBottom variant=\"h3\">domzzer login</Typography>\n\n        <form onSubmit={handleLogin} className={classes.form}>\n\n          <TextField\n            label=\"Username\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            onChange={(event) => setUsername(event.target.value)}\n            value={username}\n          />\n\n          <TextField\n            label=\"Password\"\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            type=\"password\"\n            onChange={(event) => setPassword(event.target.value)}\n            value={password}\n          />\n\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Log in\n          </Button>\n\n        </form>\n\n      </div>\n    </Container>\n  )\n}\n\nexport default LoginPage","import serverInfoService from '../services/ServerInfoService'\nimport slaveService from '../services/SlaveService'\nimport userService from '../services/UserService'\nimport vulnerabilityService from '../services/VulnerabilityService'\n\nconst useTokenizer = () => {\n  \n  const updateServicesWithToken = (token) => {\n    serverInfoService.setToken(token)\n    slaveService.setToken(token)\n    userService.setToken(token)\n    vulnerabilityService.setToken(token)\n  }\n\n  const clearServicesFromToken = () => {\n    updateServicesWithToken(null)\n  }\n\n  return { updateServicesWithToken, clearServicesFromToken }\n}\n\nexport { useTokenizer }","const serverInfoReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_SERVER_INFO':\n      return action.info\n    default:\n      return state\n  }\n}\n\nexport const serverInfoChange = info => {\n  return {\n    type: 'SET_SERVER_INFO',\n    info\n  }\n}\n\nexport default serverInfoReducer","import React from 'react'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst ServerInfo = ({ serverInfo }) => {\n  \n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n  \n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Server name:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverName}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Server OS:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverType}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Server OS-version:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverVersion}</TableCell>\n          </TableRow>\n          <TableRow key=\"4\">\n            <TableCell align=\"left\">Server memory:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverMemoryMb}</TableCell>\n          </TableRow>\n          <TableRow key=\"5\">\n            <TableCell align=\"left\">Server date:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverDate}</TableCell>\n          </TableRow>\n          <TableRow key=\"6\">\n            <TableCell align=\"left\">Server uptime:</TableCell>\n            <TableCell align=\"left\">{serverInfo.serverUptime}</TableCell>\n          </TableRow>\n          <TableRow key=\"7\">\n            <TableCell align=\"left\">Server controlled slave machines:</TableCell>\n            <TableCell align=\"left\">{serverInfo.numberOfSlaves}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default ServerInfo","import React from 'react'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst VulnerabilityInfo = ({ serverInfo }) => {\n\n  if (serverInfo === undefined || serverInfo.serverName === undefined) {\n    return (\n      <div>\n        <p>Server information not available!</p>\n      </div>\n    )\n  }\n\n  const tests = serverInfo.numberOfTestsPerformed\n  const vulnerabilities = serverInfo.numberOfPotentialVulnerabilities\n  const ratio = (tests !== undefined && tests !== 0) ? vulnerabilities / tests : 0\n\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableBody>\n          <TableRow key=\"1\">\n            <TableCell align=\"left\">Number of tests performed:</TableCell>\n            <TableCell align=\"right\">{tests}</TableCell>\n          </TableRow>\n          <TableRow key=\"2\">\n            <TableCell align=\"left\">Number of potential vulnerabilities found:</TableCell>\n            <TableCell align=\"right\">{vulnerabilities}</TableCell>\n          </TableRow>\n          <TableRow key=\"3\">\n            <TableCell align=\"left\">Potential vulnerabilities to tests ratio:</TableCell>\n            <TableCell align=\"right\">{ratio}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default VulnerabilityInfo","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { serverInfoChange } from '../reducers/ServerInfoReducer'\nimport serverInfoService from '../services/ServerInfoService'\nimport ServerInfo from './ServerInfo'\nimport VulnerabilityInfo from './VulnerabilityInfo'\n\nconst HomePage = () => {\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const serverInfo = useSelector(state => state.serverInfo)\n\n  useEffect(() => {\n    serverInfoService\n      .getInfo()\n      .then(info => dispatch(serverInfoChange(info)))\n      .catch((exception) => {\n        const error = exception.response.data.error || \"Could not retrieve server information!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Home</h1>\n      <h3>Master Server Information</h3>\n      <ServerInfo serverInfo={serverInfo} />\n      <br />\n      <h3>Vulnerability Information</h3>\n      <VulnerabilityInfo serverInfo={serverInfo} />\n    </div>\n  )\n}\n\nexport default HomePage","import React, { useState } from 'react'\n\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Container from '@material-ui/core/Container'\nimport Typography from '@material-ui/core/Typography'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst NewSlaveForm = () => {\n  const messager = useMessager()\n  const classes = useStyles()\n  const [name, setName] = useState('')\n  const [address, setAddress] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n\n  const addSlave = (event) => {\n    event.preventDefault()\n\n    const newSlave = { name, address, username, password }\n\n    slaveService.create(newSlave)\n      .then(() => {\n        messager.showInfoMessage(\"Succesfully added new slave to database!\")\n        setName('')\n        setAddress('')\n        setUsername('')\n        setPassword('')\n      })\n      .catch(() => {\n        messager.showErrorMessage(\"Could not add new slave to database!!!\")\n      })\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / New</h1>\n\n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n\n          <Typography gutterBottom variant=\"h3\">Add New Slave</Typography>\n\n          <form onSubmit={addSlave} className={classes.form}>\n\n            <TextField\n              label=\"Name\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setName(event.target.value)}\n              value={name}\n            />\n\n            <TextField\n              label=\"Address\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              onChange={(event) => setAddress(event.target.value)}\n              value={address}\n            />\n\n            <TextField\n              label=\"Username (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              onChange={(event) => setUsername(event.target.value)}\n              value={username}\n            />\n\n            <TextField\n              label=\"Password (optional)\"\n              variant=\"outlined\"\n              margin=\"normal\"\n              required={false}\n              fullWidth\n              type=\"password\"\n              onChange={(event) => setPassword(event.target.value)}\n              value={password}\n            />\n\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >Add</Button>\n\n          </form>\n\n        </div>\n      </Container>\n    </div >\n  )\n}\n\nexport default NewSlaveForm","const slaveReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_SLAVES':\n      return action.slaves\n    case 'INSERT_SLAVE':\n      if (state.find(s => s.id === action.slave.id)) {\n        return state\n      }\n      return state.concat(action.slave)\n    default:\n      return state\n  }\n}\n\nexport const slavesChange = slaves => {\n  return {\n    type: 'SET_SLAVES',\n    slaves\n  }\n}\n\nexport const slaveInsert = slave => {\n  return {\n    type: 'INSERT_SLAVE',\n    slave\n  }\n}\n\nexport default slaveReducer","import { withStyles } from \"@material-ui/core/styles\"\nimport TableRow from '@material-ui/core/TableRow'\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow)\n\nexport default StyledTableRow","import { withStyles } from \"@material-ui/core/styles\"\nimport TableCell from '@material-ui/core/TableCell'\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell)\n\nexport default StyledTableCell","import React, { useState } from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport StyledTableRow from './StyledTableRow'\nimport StyledTableCell from './StyledTableCell'\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TablePagination from '@material-ui/core/TablePagination'\n\nconst SlaveTable = ({ slaves }) => {\n  const [page, setPage] = useState(0)\n  const rowsPerPage = 10\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, slaves.length - page * rowsPerPage);\n\n\n  return (\n    <TableContainer style={{ marginTop: 50 }}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <StyledTableRow>\n            <StyledTableCell>Server name</StyledTableCell>\n            <StyledTableCell>Server address</StyledTableCell>\n            <StyledTableCell>Server status</StyledTableCell>\n          </StyledTableRow>\n        </TableHead>\n        <TableBody>\n          {slaves\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map(s =>\n              <StyledTableRow key={s.id}>\n                <StyledTableCell align=\"left\"><Link to={`/slaves/${s.id}`}>{s.name}</Link></StyledTableCell>\n                <StyledTableCell align=\"left\">{s.address}</StyledTableCell>\n                <StyledTableCell align=\"left\">{s.status}</StyledTableCell>\n              </StyledTableRow>\n            )}\n          {emptyRows > 0 && (\n            <StyledTableRow style={{ height: 53 * emptyRows }}>\n              <StyledTableCell colSpan={6} />\n            </StyledTableRow>)}\n        </TableBody>\n      </Table>\n      <TablePagination\n        rowsPerPageOptions={[10]}\n        component=\"div\"\n        count={slaves.length}\n        rowsPerPage={10}\n        page={page}\n        onChangePage={(event, newPage) => setPage(newPage)}\n      />\n    </TableContainer>\n  )\n}\n\nexport default SlaveTable","import React, { useEffect, useState } from 'react'\nimport { Link } from \"react-router-dom\"\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { slavesChange } from '../reducers/SlaveReducer'\nimport slaveService from '../services/SlaveService'\nimport { useMessager } from '../hooks/Messager'\nimport SlaveTable from './SlaveTable'\n\nimport Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport Grid from '@material-ui/core/Grid'\n\nconst SlavesPage = () => {\n  const dispatch = useDispatch()\n  const messager = useMessager()\n  const [filter, setFilter] = useState('')\n  const slaves = useSelector(state => state.slaves)\n\n  const filteredSlaves = slaves.filter(s => {\n    if (s.name.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.address.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    if (s.status.toLowerCase().includes(filter.toLowerCase())) {\n      return true\n    }\n    return false\n  })\n\n  useEffect(() => {\n    slaveService\n      .getAll()\n      .then(resultSlaves => dispatch(slavesChange(resultSlaves)))\n      .catch(exception => {\n        const error = exception.response.data.error || \"Could not retrieve slave data from server!\"\n        messager.showErrorMessage(error)\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Slaves</h1>\n\n      <Grid container spacing={3} justify=\"space-around\">\n\n        <Grid item xs={6} style={{ marginTop: 15, display: \"flex\", justifyContent: \"flex-start\" }}>\n          <TextField\n            onChange={(event) => setFilter(event.target.value)}\n            fullWidth\n            value={filter}\n            placeholder=\"filter by keyword\"\n          />\n        </Grid>\n\n        <Grid item xs={6} style={{ display: \"flex\", justifyContent: \"center\" }}>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            component={Link}\n            to=\"/slaves/new\"\n          >add new slave</Button>\n        </Grid>\n      </Grid>\n\n      <SlaveTable slaves={filteredSlaves} />\n    </div>\n  )\n}\n\nexport default SlavesPage","import React, { useEffect } from 'react'\nimport { useParams, useHistory } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport slaveService from '../services/SlaveService'\nimport { slaveInsert, slavesChange } from '../reducers/SlaveReducer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\nimport Grid from '@material-ui/core/Grid'\nimport TextField from '@material-ui/core/TextField'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  gridItem: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(3, 0, 2),\n  }\n}))\n\nconst SlaveForm = ({ slave, classes }) => {\n  return (\n    <div>\n      <form className={classes.form}>\n\n        <TextField\n          label=\"Name\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={slave.name}\n          disabled\n        />\n\n        <TextField\n          label=\"Address\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          value={slave.address}\n          disabled\n        />\n\n        <TextField\n          label=\"Username (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          value={slave.username}\n          disabled\n        />\n\n        <TextField\n          label=\"Password (optional)\"\n          variant=\"outlined\"\n          margin=\"normal\"\n          required={false}\n          fullWidth\n          type=\"password\"\n          value={slave.password}\n          disabled\n        />\n\n      </form>\n    </div>\n  )\n}\n\nconst Slave = () => {\n  const classes = useStyles()\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const slaves = useSelector(state => state.slaves)\n  const slave = slaves.find(s => s.id === id)\n\n  useEffect(() => {\n    slaveService.getById(id)\n      .then(slave => {\n        dispatch(slaveInsert(slave))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const deleteSlave = () => {\n    slaveService.remove(id)\n      .then(() => {\n        const filteredSlaves = slaves.filter(s => s.id !== id)\n        dispatch(slavesChange(filteredSlaves))\n        history.push('/slaves')\n      })\n      .catch(error => {\n      })\n  }\n\n  if (slave === undefined) {\n    return (\n      <div>\n        <h1>domzzer / Slaves / 404 (Slave not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Slaves / {slave.name} </h1>\n      \n      <Container component=\"main\" maxWidth=\"xs\">\n        <div className={classes.paper}>\n          <SlaveForm slave={slave} classes={classes} />\n        </div>\n      </Container>\n\n      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n        <Grid item className={classes.gridItem} xs>\n          <Button color=\"primary\" variant=\"contained\" size=\"large\">\n            Edit information\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button color=\"secondary\" variant=\"contained\" size=\"large\" onClick={deleteSlave} >\n            Remove from database\n          </Button>\n        </Grid>\n      </Grid>\n    </div>\n  )\n}\n\nexport default Slave","const vulnerabilityReducer = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_VULNERABILITIES':\n      return action.vulnerabilities\n    case 'INSERT_VULNERABILITY':\n      if (state.find(v => v.id === action.vulnerability.id)) {\n        return state\n      }\n      return state.concat(action.vulnerability)\n    default:\n      return state\n  }\n}\n\nexport const vulnerabilitiesChange = vulnerabilities => {\n  return {\n    type: 'SET_VULNERABILITIES',\n    vulnerabilities\n  }\n}\n\nexport const vulnerabilityInsert = vulnerability => {\n  return {\n    type: 'INSERT_VULNERABILITY',\n    vulnerability\n  }\n}\n\nexport default vulnerabilityReducer","import React from 'react'\nimport { Link } from \"react-router-dom\"\n\nimport TableContainer from '@material-ui/core/TableContainer'\nimport Table from '@material-ui/core/Table'\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow'\nimport TableCell from '@material-ui/core/TableCell'\n\nconst VulnerabilityTable = ({ vulnerabilities }) => {\n  return (\n    <TableContainer>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>ID</TableCell>\n            <TableCell>Server address</TableCell>\n            <TableCell>Target browser</TableCell>\n            <TableCell>Timestamp</TableCell>\n            <TableCell>Status</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {vulnerabilities.map(v =>\n            <TableRow key={v.id}>\n              <TableCell align=\"left\"><Link to={`/vulnerabilities/${v.id}`}>{v.id}</Link></TableCell>\n              <TableCell align=\"left\">{v.serverAddress}</TableCell>\n              <TableCell align=\"left\">{v.targetBrowser}</TableCell>\n              <TableCell align=\"left\">{v.timestamp}</TableCell>\n              <TableCell align=\"left\">{v.status}</TableCell>\n            </TableRow>\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nexport default VulnerabilityTable","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { useMessager } from '../hooks/Messager'\nimport { vulnerabilitiesChange } from '../reducers/VulnerabilityReducer'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport VulnerabilityTable from './VulnerabilityTable'\n\nconst Vulnerabilities = () => {\n  const messager = useMessager()\n  const dispatch = useDispatch()\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n\n  useEffect(() => {\n    vulnerabilityService\n      .getAll()\n      .then(vulnerabilities => dispatch(vulnerabilitiesChange(vulnerabilities)))\n      .catch(() => {\n        messager.showErrorMessage(\"Could not retrieve vulnerability information from server!\")\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities</h1>\n      <h3>Vulnerabilities in Database</h3>\n      <VulnerabilityTable vulnerabilities={vulnerabilities} />\n    </div>\n  )\n}\n\nexport default Vulnerabilities","import React, { useEffect } from 'react'\nimport { useParams } from \"react-router-dom\"\nimport { useSelector, useDispatch } from 'react-redux'\nimport vulnerabilityService from '../services/VulnerabilityService'\nimport { vulnerabilityInsert } from '../reducers/VulnerabilityReducer'\n\nconst Vulnerability = () => {\n  const dispatch = useDispatch()\n  const id = useParams().id\n  const vulnerabilities = useSelector(state => state.vulnerabilities)\n  const vulnerability = vulnerabilities.find(v => v.id === id)\n\n  useEffect(() => {\n    vulnerabilityService.getById(id)\n      .then(vulnerability => {\n        dispatch(vulnerabilityInsert(vulnerability))\n      })\n      .catch(error => {\n      })\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (vulnerability === undefined) {\n    return (\n      <div>\n        <h1>domzzer - Vulnerabilities - 404 (Vulnerability not found) </h1>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>domzzer / Vulnerabilities / {vulnerability.id} </h1>\n      <h3>server address: {vulnerability.serverAddress}</h3>\n      <h3>target browser: {vulnerability.targetBrowser}</h3>\n      <h3>timestamp: {vulnerability.timestamp}</h3>\n      <h3>status: {vulnerability.status}</h3>\n    </div>\n  )\n}\n\nexport default Vulnerability","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, Link, useHistory } from \"react-router-dom\"\n\nimport InfoNotification from './components/InfoNotification'\nimport ErrorNotification from './components/ErrorNotification'\nimport LoginPage from './components/LoginPage'\nimport HomePage from './components/HomePage'\nimport NewSlaveForm from './components/NewSlaveForm'\nimport SlavesPage from './components/SlavesPage'\nimport Slave from './components/Slave'\nimport Vulnerabilities from './components/Vulnerabilities'\nimport Vulnerability from './components/Vulnerability'\nimport { setUser } from './reducers/UserReducer'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar'\nimport Container from '@material-ui/core/Container'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport CssBaseline from '@material-ui/core/CssBaseline'\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    })\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  }\n}))\n\nfunction App() {\n  const history = useHistory()\n  const classes = useStyles()\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.user)\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('domzzerUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n    }\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (user === null) {\n    history.push('/login')\n  }\n\n  return (\n    <div>\n      <div className={classes.root}>\n        <CssBaseline />\n\n        <AppBar position=\"absolute\" className={classes.appBar}>\n          <Toolbar>\n            {user !== null &&\n              <div>\n                <Button color=\"inherit\" component={Link} to=\"/\">home</Button>\n                <Button color=\"inherit\" component={Link} to=\"/slaves\">slaves</Button>\n                <Button color=\"inherit\" component={Link} to=\"/vulnerabilities\">vulnerabilities</Button>\n                <Button color=\"inherit\" component={Link} to=\"/users\">users</Button>\n                <Button color=\"inherit\" component={Link} to=\"/settings\">settings</Button>\n              </div>\n            }\n          </Toolbar>\n        </AppBar>\n\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"lg\" className={classes.container}>\n            <InfoNotification />\n            <ErrorNotification />\n\n            <Switch>\n              {user === null && <Route path=\"/login\"><LoginPage /></Route>}\n              {user !== null && <Route path=\"/users\"></Route>}\n              {user !== null && <Route path=\"/settings\"></Route>}\n              {user !== null && <Route path=\"/vulnerabilities/:id\"><Vulnerability /></Route>}\n              {user !== null && <Route path=\"/vulnerabilities\"><Vulnerabilities /></Route>}\n              {user !== null && <Route path=\"/slaves/new\"><NewSlaveForm /></Route>}\n              {user !== null && <Route path=\"/slaves/:id\"><Slave /></Route>}\n              {user !== null && <Route path=\"/slaves\"><SlavesPage /></Route>}\n              {user !== null && <Route path=\"/\"><HomePage /></Route>}\n            </Switch>\n          </Container>\n        </main>\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { createStore, combineReducers } from 'redux'\nimport { Provider } from 'react-redux'\nimport {\n  BrowserRouter as Router,\n} from \"react-router-dom\"\n\nimport App from './App'\nimport serverInfoReducer from './reducers/ServerInfoReducer'\nimport slaveReducer from './reducers/SlaveReducer'\nimport vulnerabilityReducer from './reducers/VulnerabilityReducer'\nimport infoMsgReducer from './reducers/InfoMsgReducer'\nimport errorMsgReducer from './reducers/ErrorMsgReducer'\nimport userReducer from './reducers/UserReducer'\n\nconst reducer = combineReducers({\n  serverInfo: serverInfoReducer,\n  slaves: slaveReducer,\n  vulnerabilities: vulnerabilityReducer,\n  infoMsg: infoMsgReducer,\n  errorMsg: errorMsgReducer,\n  user: userReducer,\n})\nconst store = createStore(reducer)\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}